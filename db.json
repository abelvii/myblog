{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514806389000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514806389000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514806389000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514806389000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514806389000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514806389000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514806389000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514806389000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514806389000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514806389000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514806389000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514806389000},{"_id":"themes/next/_config.yml","hash":"226faf1c5f63b12a815c5cbc4dc7cd5407eb0cc2","modified":1534153457295},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514806389000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514806389000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514806389000},{"_id":"source/_posts/data_mining_in_my_eyes.md","hash":"3ef77436d9381c98f98d9f5124a1b2488f6fe29a","modified":1534130080428},{"_id":"source/_posts/first-blog.md","hash":"e9ef0255a3969568e48a37e8fb39edaa3a370e69","modified":1534130080428},{"_id":"source/_posts/hexo&web.md","hash":"4903c06b186fdc5e472c5215a85155f0e7ca63d9","modified":1534130080428},{"_id":"source/_posts/node-route.md","hash":"f55be6f1fba83b648deb6301703d66bdb6da5b81","modified":1534130080428},{"_id":"source/_posts/nodejs-webserver-ii.md","hash":"48adff304edbcb2a717ff8606d764b4e56eb70a8","modified":1534130080428},{"_id":"source/_posts/something-about-tkinter.md","hash":"2f101c976bbc19318c4502ff274d3a169493576c","modified":1534152678245},{"_id":"source/categories/index.md","hash":"247be0075df624b58f4000924539f9cce5305730","modified":1534148668389},{"_id":"source/技术/index.md","hash":"e25130ab757432438655c041b04c56df29999f05","modified":1534153316519},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514806389000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514806389000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514806389000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514806389000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514806389000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514806389000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514806389000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514806389000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514806389000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514806389000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514806389000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514806389000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514806389000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514806389000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514806389000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514806389000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514806389000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1514806389000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514806389000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514806389000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1514806389000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514806389000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514806389000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514806389000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514806389000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514806389000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514806389000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514806389000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514806389000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514806389000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514806389000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514806389000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514806389000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514806389000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1514806389000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514806389000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514806389000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514806389000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514806389000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514806389000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514806389000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514806389000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514806389000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514806389000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514806389000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514806389000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1514806389000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514806389000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514806389000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514806389000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514806389000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514806389000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514806389000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514806389000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514806389000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514806389000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514806389000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514806389000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514806389000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514806389000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514806389000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514806389000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514806389000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514806389000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514806389000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514806389000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514806389000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514806389000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514806389000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514806389000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514806389000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514806389000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514806389000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514806389000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514806389000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514806389000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514806389000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514806389000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514806389000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514806389000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514806389000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514806389000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514806389000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514806389000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514806389000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514806389000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514806389000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514806389000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514806389000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514806389000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514806389000},{"_id":"public/content.json","hash":"603dee7c126e9caf8c15718aff155d3e1ca56290","modified":1534153321002},{"_id":"public/2017/01/21/first-blog/index.html","hash":"b3ea4384fff34204b4e048c0afad5a44d0352ee7","modified":1534153467462},{"_id":"public/archives/index.html","hash":"28df0f885a00eb280e057f9d272bde19026264e6","modified":1534153467460},{"_id":"public/archives/2017/index.html","hash":"22a8e19c0af01a38dd31f03296f214967ce6ed3f","modified":1534153467460},{"_id":"public/archives/2017/01/index.html","hash":"88becdc17f0bfdd9705d03296b9118360860108e","modified":1534153467461},{"_id":"public/archives/2017/02/index.html","hash":"52114c7a4e7d485e98df5debf269703ca8b99a14","modified":1534153467461},{"_id":"public/archives/2018/index.html","hash":"f8f9a48e023f18d5af2aae2d6c04db8376107422","modified":1534153467461},{"_id":"public/archives/2018/08/index.html","hash":"1085e37b7497967e7b0647734ab4ec20f1267e2b","modified":1534153467461},{"_id":"public/categories/杂记/index.html","hash":"8ae61b31d14d848361ee84a26543ae7bcf477d87","modified":1534153467461},{"_id":"public/categories/技术/index.html","hash":"e15650e02d37028fc2f9466748a1778201d5042f","modified":1534153467461},{"_id":"public/tags/心情/index.html","hash":"76c938349b0fc67a8b41d209714d218e5a0be870","modified":1534153467461},{"_id":"public/tags/nodejs/index.html","hash":"6bd73b4fe4e510803973fc26bc464833fa40021a","modified":1534153467461},{"_id":"public/tags/hexo/index.html","hash":"33fe6a477c26f7fe2949352f3e2d314c8baf7320","modified":1534153467461},{"_id":"public/tags/数据挖掘/index.html","hash":"8d7aec385bb21bb95b940a153e832370c98c9468","modified":1534153467461},{"_id":"public/tags/Python/index.html","hash":"c1190674e738a19a37511f390ebf1c3390a85002","modified":1534153467461},{"_id":"public/tags/tkinter/index.html","hash":"5a398ab8f2d5344f2a7e1e20f4024ca1b7dbf0ee","modified":1534153467462},{"_id":"public/2018/08/13/something-about-tkinter/index.html","hash":"b937a0e52cd7a39f6cd13f5c8d57876a8f3458de","modified":1534153467462},{"_id":"public/2017/02/14/hexo&web/index.html","hash":"21c8778360930fdc81e6fa26504bf209a6a0ec9f","modified":1534153467462},{"_id":"public/2017/01/26/nodejs-webserver-ii/index.html","hash":"b2fdea9e401cf8ae8b62574952f397f3cb4cfb50","modified":1534153467462},{"_id":"public/2017/01/23/node-route/index.html","hash":"38185fa414e78145f5739c24574d2033f84850b2","modified":1534153467462},{"_id":"public/2017/01/22/data_mining_in_my_eyes/index.html","hash":"44087fb980ed68d6140ba1f7a150d7b553b25284","modified":1534153467462},{"_id":"public/index.html","hash":"67e319071ddc64b2ff876ed6871af7485efcedf3","modified":1534153467462},{"_id":"public/技术/index.html","hash":"cc052a3b8f6cd3558525edc2885f9979f00fea6b","modified":1534153385296},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1534153321098},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1534153321098},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1534153321098},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1534153321098},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1534153321098},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1534153321098},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1534153321099},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1534153321099},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1534153321099},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1534153321099},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1534153321099},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1534153321099},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534153321099},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1534153321099},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534153321099},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1534153321099},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1534153321099},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1534153321099},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1534153321099},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1534153321099},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1534153321099},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1534153321099},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1534153321100},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1534153321100},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1534153321100},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1534153321100},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1534153321100},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1534153321100},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1534153321100},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1534153321100},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1534153321100},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1534153321100},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1534153321593},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1534153321595},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1534153321595},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1534153321602},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1534153321602},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1534153321602},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1534153321602},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1534153321602},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1534153321603},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1534153321603},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1534153321603},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1534153321603},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1534153321603},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1534153321603},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1534153321603},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1534153321603},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1534153321603},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1534153321603},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1534153321603},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1534153321603},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1534153321603},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1534153321603},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1534153321603},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1534153321603},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1534153321603},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1534153321604},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1534153321604},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1534153321604},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1534153321604},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1534153321604},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1534153321604},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1534153321604},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1534153321604},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1534153321604},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1534153321605},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1534153321605},{"_id":"public/css/main.css","hash":"37855ae1f068b5f8256de001bb0e964224bc6013","modified":1534153321605},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1534153321605},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1534153321608},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1534153321608},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1534153321609},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1534153321609},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1534153321609},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1534153321609},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1534153321610},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1534153321610},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1534153321610},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1534153321610},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1534153321613},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1534153321613},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1534153321614},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1534153321614},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1534153321630},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1534153321630},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1534153321631},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1534153321631},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1534153321631},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1534153321631},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1534153321631},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1534153321635},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1534153321635},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1534153321635},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1534153321635},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1534153321640},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1534153321641},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1534153321653},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1534153321656},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1534153321663},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1534153321666}],"Category":[{"name":"杂记","_id":"cjks39xc20003p648nxmqvb00"},{"name":"技术","_id":"cjks39xca0008p6482vcxl8mh"}],"Data":[],"Page":[],"Post":[{"title":"hello world","date":"2017-01-21T01:39:26.000Z","_content":"\n\n折腾了好久的博客，原本是想要自己去做所有的东西，但是因为懒所以只是做了一些就一直放在那里了。最近学了一些数据挖掘相关的东西，忍不住自己想要装逼的心情，正好这个假期没有出去实习，在家呆着就准备搞博客了，这个博客是hexo的，大概了解了一下。\n\n\n\n### 今年我23\n\n\n不知不觉已经23岁了，距离大学毕业还有一段距离，现在就是心里想的最多，但是却最无能为力的时候。\n\n\n每次独处都好像想了很多很多，但是又好像什么都没有想。\n\n\n成长一直是一个沉重的话题。\n\n\n算了。学习去了\n\n","source":"_posts/first-blog.md","raw":"---\ntitle: hello world\ndate: 2017-01-21 09:39:26\ncategories: 杂记\ntags: 心情\n---\n\n\n折腾了好久的博客，原本是想要自己去做所有的东西，但是因为懒所以只是做了一些就一直放在那里了。最近学了一些数据挖掘相关的东西，忍不住自己想要装逼的心情，正好这个假期没有出去实习，在家呆着就准备搞博客了，这个博客是hexo的，大概了解了一下。\n\n\n\n### 今年我23\n\n\n不知不觉已经23岁了，距离大学毕业还有一段距离，现在就是心里想的最多，但是却最无能为力的时候。\n\n\n每次独处都好像想了很多很多，但是又好像什么都没有想。\n\n\n成长一直是一个沉重的话题。\n\n\n算了。学习去了\n\n","slug":"first-blog","published":1,"updated":"2018-08-13T03:14:40.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjks39xbp0000p648pg0b4xe3","content":"<p>折腾了好久的博客，原本是想要自己去做所有的东西，但是因为懒所以只是做了一些就一直放在那里了。最近学了一些数据挖掘相关的东西，忍不住自己想要装逼的心情，正好这个假期没有出去实习，在家呆着就准备搞博客了，这个博客是hexo的，大概了解了一下。</p>\n<h3 id=\"今年我23\"><a href=\"#今年我23\" class=\"headerlink\" title=\"今年我23\"></a>今年我23</h3><p>不知不觉已经23岁了，距离大学毕业还有一段距离，现在就是心里想的最多，但是却最无能为力的时候。</p>\n<p>每次独处都好像想了很多很多，但是又好像什么都没有想。</p>\n<p>成长一直是一个沉重的话题。</p>\n<p>算了。学习去了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>折腾了好久的博客，原本是想要自己去做所有的东西，但是因为懒所以只是做了一些就一直放在那里了。最近学了一些数据挖掘相关的东西，忍不住自己想要装逼的心情，正好这个假期没有出去实习，在家呆着就准备搞博客了，这个博客是hexo的，大概了解了一下。</p>\n<h3 id=\"今年我23\"><a href=\"#今年我23\" class=\"headerlink\" title=\"今年我23\"></a>今年我23</h3><p>不知不觉已经23岁了，距离大学毕业还有一段距离，现在就是心里想的最多，但是却最无能为力的时候。</p>\n<p>每次独处都好像想了很多很多，但是又好像什么都没有想。</p>\n<p>成长一直是一个沉重的话题。</p>\n<p>算了。学习去了</p>\n"},{"title":"对于hexo new的web端构想","date":"2017-02-13T23:55:57.000Z","_content":"\n用了一段时间的hexo，感觉在pc端用着还是很方便的，但是有一些时候，想用手机在博客上记录一些自己的心情时却无能为力，所以突发奇想想要做一个hexo新建文章的web端，作为一名程序员，想要把一些繁琐的过程自动化实现，最首先的构想就是流程的控制，流程就分为几步：\n\n```\n新建文章->修改博文类别等信息->编写markdown内容->更新hexo博客内容->上传到hexo博客仓库\n```\n\n以下所有内容都是以nodejs作为后端语言的构想。并且会在本月26号开学之后进行代码的实现\n\n<!--more-->\n\n### 新建文章||新建文章&&修改博文类别信息\n\n用过hexo的都知道，新建文章的命令是hexo new \"postname\"，那么web端想要进行文章的新建就有两种方法，第一种就是运行hexo命令，第二种就是直接按照hexo new命令新建出来的文件的格式，使用fs进行新建文件，将一些必要信息输入进新建的文件中，个人偏向于使用第二种方法，因为第一种方法的流程控制比较麻烦，需要等hexo new命令，还需要进入新建出的文件进行信息的修改。第二种方法的优势就是可以在web端直接填写一些必要信息，将这些信息收到后直接填入md文件中，之后执行hexo g&d命令。\n\n所以暂时选用第二种方法。\n\n### 编写markdown内容\n\n感觉这部分东西会比较简单，因为有一些很成熟的markdown编辑器，可以看见实时的效果。\n\n这部分内容没有什么好思考的\n\n### 更新hexo博客内容&&上传到仓库\n\nnodejs.process.exec运行hexo g和hexo d命令就可以了\n\n### 安全性问题\n\n在web端新建文章，提交到后端时加上校验就可以了，在json文件中存入一个password，将前端的输入与password进行对比就可以了。不是特别麻烦。","source":"_posts/hexo&web.md","raw":"---\ntitle: 对于hexo new的web端构想\ndate: 2017-02-14 07:55:57\ncategories: 技术\ntags: [\"nodejs\", \"hexo\"]\n---\n\n用了一段时间的hexo，感觉在pc端用着还是很方便的，但是有一些时候，想用手机在博客上记录一些自己的心情时却无能为力，所以突发奇想想要做一个hexo新建文章的web端，作为一名程序员，想要把一些繁琐的过程自动化实现，最首先的构想就是流程的控制，流程就分为几步：\n\n```\n新建文章->修改博文类别等信息->编写markdown内容->更新hexo博客内容->上传到hexo博客仓库\n```\n\n以下所有内容都是以nodejs作为后端语言的构想。并且会在本月26号开学之后进行代码的实现\n\n<!--more-->\n\n### 新建文章||新建文章&&修改博文类别信息\n\n用过hexo的都知道，新建文章的命令是hexo new \"postname\"，那么web端想要进行文章的新建就有两种方法，第一种就是运行hexo命令，第二种就是直接按照hexo new命令新建出来的文件的格式，使用fs进行新建文件，将一些必要信息输入进新建的文件中，个人偏向于使用第二种方法，因为第一种方法的流程控制比较麻烦，需要等hexo new命令，还需要进入新建出的文件进行信息的修改。第二种方法的优势就是可以在web端直接填写一些必要信息，将这些信息收到后直接填入md文件中，之后执行hexo g&d命令。\n\n所以暂时选用第二种方法。\n\n### 编写markdown内容\n\n感觉这部分东西会比较简单，因为有一些很成熟的markdown编辑器，可以看见实时的效果。\n\n这部分内容没有什么好思考的\n\n### 更新hexo博客内容&&上传到仓库\n\nnodejs.process.exec运行hexo g和hexo d命令就可以了\n\n### 安全性问题\n\n在web端新建文章，提交到后端时加上校验就可以了，在json文件中存入一个password，将前端的输入与password进行对比就可以了。不是特别麻烦。","slug":"hexo&web","published":1,"updated":"2018-08-13T03:14:40.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjks39xbx0002p64877rz6xvt","content":"<p>用了一段时间的hexo，感觉在pc端用着还是很方便的，但是有一些时候，想用手机在博客上记录一些自己的心情时却无能为力，所以突发奇想想要做一个hexo新建文章的web端，作为一名程序员，想要把一些繁琐的过程自动化实现，最首先的构想就是流程的控制，流程就分为几步：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新建文章-&gt;修改博文类别等信息-&gt;编写markdown内容-&gt;更新hexo博客内容-&gt;上传到hexo博客仓库</span><br></pre></td></tr></table></figure>\n<p>以下所有内容都是以nodejs作为后端语言的构想。并且会在本月26号开学之后进行代码的实现</p>\n<a id=\"more\"></a>\n<h3 id=\"新建文章-新建文章-amp-amp-修改博文类别信息\"><a href=\"#新建文章-新建文章-amp-amp-修改博文类别信息\" class=\"headerlink\" title=\"新建文章||新建文章&amp;&amp;修改博文类别信息\"></a>新建文章||新建文章&amp;&amp;修改博文类别信息</h3><p>用过hexo的都知道，新建文章的命令是hexo new “postname”，那么web端想要进行文章的新建就有两种方法，第一种就是运行hexo命令，第二种就是直接按照hexo new命令新建出来的文件的格式，使用fs进行新建文件，将一些必要信息输入进新建的文件中，个人偏向于使用第二种方法，因为第一种方法的流程控制比较麻烦，需要等hexo new命令，还需要进入新建出的文件进行信息的修改。第二种方法的优势就是可以在web端直接填写一些必要信息，将这些信息收到后直接填入md文件中，之后执行hexo g&amp;d命令。</p>\n<p>所以暂时选用第二种方法。</p>\n<h3 id=\"编写markdown内容\"><a href=\"#编写markdown内容\" class=\"headerlink\" title=\"编写markdown内容\"></a>编写markdown内容</h3><p>感觉这部分东西会比较简单，因为有一些很成熟的markdown编辑器，可以看见实时的效果。</p>\n<p>这部分内容没有什么好思考的</p>\n<h3 id=\"更新hexo博客内容-amp-amp-上传到仓库\"><a href=\"#更新hexo博客内容-amp-amp-上传到仓库\" class=\"headerlink\" title=\"更新hexo博客内容&amp;&amp;上传到仓库\"></a>更新hexo博客内容&amp;&amp;上传到仓库</h3><p>nodejs.process.exec运行hexo g和hexo d命令就可以了</p>\n<h3 id=\"安全性问题\"><a href=\"#安全性问题\" class=\"headerlink\" title=\"安全性问题\"></a>安全性问题</h3><p>在web端新建文章，提交到后端时加上校验就可以了，在json文件中存入一个password，将前端的输入与password进行对比就可以了。不是特别麻烦。</p>\n","site":{"data":{}},"excerpt":"<p>用了一段时间的hexo，感觉在pc端用着还是很方便的，但是有一些时候，想用手机在博客上记录一些自己的心情时却无能为力，所以突发奇想想要做一个hexo新建文章的web端，作为一名程序员，想要把一些繁琐的过程自动化实现，最首先的构想就是流程的控制，流程就分为几步：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新建文章-&gt;修改博文类别等信息-&gt;编写markdown内容-&gt;更新hexo博客内容-&gt;上传到hexo博客仓库</span><br></pre></td></tr></table></figure>\n<p>以下所有内容都是以nodejs作为后端语言的构想。并且会在本月26号开学之后进行代码的实现</p>","more":"<h3 id=\"新建文章-新建文章-amp-amp-修改博文类别信息\"><a href=\"#新建文章-新建文章-amp-amp-修改博文类别信息\" class=\"headerlink\" title=\"新建文章||新建文章&amp;&amp;修改博文类别信息\"></a>新建文章||新建文章&amp;&amp;修改博文类别信息</h3><p>用过hexo的都知道，新建文章的命令是hexo new “postname”，那么web端想要进行文章的新建就有两种方法，第一种就是运行hexo命令，第二种就是直接按照hexo new命令新建出来的文件的格式，使用fs进行新建文件，将一些必要信息输入进新建的文件中，个人偏向于使用第二种方法，因为第一种方法的流程控制比较麻烦，需要等hexo new命令，还需要进入新建出的文件进行信息的修改。第二种方法的优势就是可以在web端直接填写一些必要信息，将这些信息收到后直接填入md文件中，之后执行hexo g&amp;d命令。</p>\n<p>所以暂时选用第二种方法。</p>\n<h3 id=\"编写markdown内容\"><a href=\"#编写markdown内容\" class=\"headerlink\" title=\"编写markdown内容\"></a>编写markdown内容</h3><p>感觉这部分东西会比较简单，因为有一些很成熟的markdown编辑器，可以看见实时的效果。</p>\n<p>这部分内容没有什么好思考的</p>\n<h3 id=\"更新hexo博客内容-amp-amp-上传到仓库\"><a href=\"#更新hexo博客内容-amp-amp-上传到仓库\" class=\"headerlink\" title=\"更新hexo博客内容&amp;&amp;上传到仓库\"></a>更新hexo博客内容&amp;&amp;上传到仓库</h3><p>nodejs.process.exec运行hexo g和hexo d命令就可以了</p>\n<h3 id=\"安全性问题\"><a href=\"#安全性问题\" class=\"headerlink\" title=\"安全性问题\"></a>安全性问题</h3><p>在web端新建文章，提交到后端时加上校验就可以了，在json文件中存入一个password，将前端的输入与password进行对比就可以了。不是特别麻烦。</p>"},{"title":"我眼中的数据挖掘","date":"2017-01-22T02:55:52.000Z","_content":"\n\n在16年的12月份我接触到的数据挖掘，也就是上个月，在很久很久以前就已经听说过这方面的东西，也一直都很想要学习一下数据挖掘这门技术，正巧上个月学校有一个数据挖掘的兴趣小组。故事就从这里开始了。。。\n\n<!-- more-->\n\n### 整体的流程\n\n虽然我现在连一个完整的项目都还没有做过，但是我就是想要写一下，用百度去搜数据挖掘的相关资料时，上面都是一些非常深奥的东西，对于像我这种新手不是十分友好，所以我就想要来写一些大概的流程，如果有大神发现有错误的话欢迎来指正。\n\n总体的流程一共有几步\n\n```flow\n取得数据->样本划分->特征提取->合并为数据集->训练模型->选取最优模型->end\n```\n\n### 取得数据\n\n这个感觉没什么说的，如果是比赛的话就直接下载就行了，如果是做项目就在数据库里面去提就行了。\n\n### 样本划分\n\n在学习的时候就因为对这个概念的理解不正确以及对整体流程掌握的不正确而走了许多弯路。\n\n数据集有三个，分别是训练集，验证集以及测试集。三个数据集的基本形式应该是相同的，只是在过程中的作用不同而名字也不同。顾名思义，训练集的作用就是训练模型，验证集的作用就是验证模型预测的准确度，测试集就是放在线上进行测试的数据集。\n\n### 特征提取\n\n特征提取是根据划分之后的样本通过改变不同的特征提取的规则进行样本的特征的提取的工作。特征就是对样本的描述，作用就是将特征与样本数据合并进行模型的训练。\n\n为什么要进行特征的提取？\n\n这个问题我有想过，通过了解人工神经网络有了一些认识。\n\n个人理解来说，训练出来的模型更像是一个数学公式，也就是我们大家都很熟悉的n元一次方程。\n\n### 简单了解神经网络\n\n通过阅读吴军博士的《数学之美》（第二版），非常浅显的了解了一些神经网络。\n\n训练模型的过程个人觉得和神经网络应该有一些联系，神经网络如图：\n\n![neural network](/img/20170122_1.jpg)\n\n神经网络分为几部分：输入端，神经元，输出端。\n\n输入端就是key，神经元就是特征以及其所占权值，训练集中输出端就是标签，测试集中输出端就是结果了。\n\n训练模型就是通过神经网络去分析各个特征所占的权值。最后进行一次函数变换就可以确定输出的结果了。\n\n---\n\n个人对于数据挖掘的理解暂时只有这些，感谢阅读。\n\ncheers！","source":"_posts/data_mining_in_my_eyes.md","raw":"---\ntitle: 我眼中的数据挖掘\ndate: 2017-01-22 10:55:52\ncategories: 技术\ntags: 数据挖掘\n---\n\n\n在16年的12月份我接触到的数据挖掘，也就是上个月，在很久很久以前就已经听说过这方面的东西，也一直都很想要学习一下数据挖掘这门技术，正巧上个月学校有一个数据挖掘的兴趣小组。故事就从这里开始了。。。\n\n<!-- more-->\n\n### 整体的流程\n\n虽然我现在连一个完整的项目都还没有做过，但是我就是想要写一下，用百度去搜数据挖掘的相关资料时，上面都是一些非常深奥的东西，对于像我这种新手不是十分友好，所以我就想要来写一些大概的流程，如果有大神发现有错误的话欢迎来指正。\n\n总体的流程一共有几步\n\n```flow\n取得数据->样本划分->特征提取->合并为数据集->训练模型->选取最优模型->end\n```\n\n### 取得数据\n\n这个感觉没什么说的，如果是比赛的话就直接下载就行了，如果是做项目就在数据库里面去提就行了。\n\n### 样本划分\n\n在学习的时候就因为对这个概念的理解不正确以及对整体流程掌握的不正确而走了许多弯路。\n\n数据集有三个，分别是训练集，验证集以及测试集。三个数据集的基本形式应该是相同的，只是在过程中的作用不同而名字也不同。顾名思义，训练集的作用就是训练模型，验证集的作用就是验证模型预测的准确度，测试集就是放在线上进行测试的数据集。\n\n### 特征提取\n\n特征提取是根据划分之后的样本通过改变不同的特征提取的规则进行样本的特征的提取的工作。特征就是对样本的描述，作用就是将特征与样本数据合并进行模型的训练。\n\n为什么要进行特征的提取？\n\n这个问题我有想过，通过了解人工神经网络有了一些认识。\n\n个人理解来说，训练出来的模型更像是一个数学公式，也就是我们大家都很熟悉的n元一次方程。\n\n### 简单了解神经网络\n\n通过阅读吴军博士的《数学之美》（第二版），非常浅显的了解了一些神经网络。\n\n训练模型的过程个人觉得和神经网络应该有一些联系，神经网络如图：\n\n![neural network](/img/20170122_1.jpg)\n\n神经网络分为几部分：输入端，神经元，输出端。\n\n输入端就是key，神经元就是特征以及其所占权值，训练集中输出端就是标签，测试集中输出端就是结果了。\n\n训练模型就是通过神经网络去分析各个特征所占的权值。最后进行一次函数变换就可以确定输出的结果了。\n\n---\n\n个人对于数据挖掘的理解暂时只有这些，感谢阅读。\n\ncheers！","slug":"data_mining_in_my_eyes","published":1,"updated":"2018-08-13T03:14:40.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjks39xc50005p648ihaih5q1","content":"<p>在16年的12月份我接触到的数据挖掘，也就是上个月，在很久很久以前就已经听说过这方面的东西，也一直都很想要学习一下数据挖掘这门技术，正巧上个月学校有一个数据挖掘的兴趣小组。故事就从这里开始了。。。</p>\n<a id=\"more\"></a>\n<h3 id=\"整体的流程\"><a href=\"#整体的流程\" class=\"headerlink\" title=\"整体的流程\"></a>整体的流程</h3><p>虽然我现在连一个完整的项目都还没有做过，但是我就是想要写一下，用百度去搜数据挖掘的相关资料时，上面都是一些非常深奥的东西，对于像我这种新手不是十分友好，所以我就想要来写一些大概的流程，如果有大神发现有错误的话欢迎来指正。</p>\n<p>总体的流程一共有几步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">取得数据-&gt;样本划分-&gt;特征提取-&gt;合并为数据集-&gt;训练模型-&gt;选取最优模型-&gt;end</span><br></pre></td></tr></table></figure>\n<h3 id=\"取得数据\"><a href=\"#取得数据\" class=\"headerlink\" title=\"取得数据\"></a>取得数据</h3><p>这个感觉没什么说的，如果是比赛的话就直接下载就行了，如果是做项目就在数据库里面去提就行了。</p>\n<h3 id=\"样本划分\"><a href=\"#样本划分\" class=\"headerlink\" title=\"样本划分\"></a>样本划分</h3><p>在学习的时候就因为对这个概念的理解不正确以及对整体流程掌握的不正确而走了许多弯路。</p>\n<p>数据集有三个，分别是训练集，验证集以及测试集。三个数据集的基本形式应该是相同的，只是在过程中的作用不同而名字也不同。顾名思义，训练集的作用就是训练模型，验证集的作用就是验证模型预测的准确度，测试集就是放在线上进行测试的数据集。</p>\n<h3 id=\"特征提取\"><a href=\"#特征提取\" class=\"headerlink\" title=\"特征提取\"></a>特征提取</h3><p>特征提取是根据划分之后的样本通过改变不同的特征提取的规则进行样本的特征的提取的工作。特征就是对样本的描述，作用就是将特征与样本数据合并进行模型的训练。</p>\n<p>为什么要进行特征的提取？</p>\n<p>这个问题我有想过，通过了解人工神经网络有了一些认识。</p>\n<p>个人理解来说，训练出来的模型更像是一个数学公式，也就是我们大家都很熟悉的n元一次方程。</p>\n<h3 id=\"简单了解神经网络\"><a href=\"#简单了解神经网络\" class=\"headerlink\" title=\"简单了解神经网络\"></a>简单了解神经网络</h3><p>通过阅读吴军博士的《数学之美》（第二版），非常浅显的了解了一些神经网络。</p>\n<p>训练模型的过程个人觉得和神经网络应该有一些联系，神经网络如图：</p>\n<p><img src=\"/img/20170122_1.jpg\" alt=\"neural network\"></p>\n<p>神经网络分为几部分：输入端，神经元，输出端。</p>\n<p>输入端就是key，神经元就是特征以及其所占权值，训练集中输出端就是标签，测试集中输出端就是结果了。</p>\n<p>训练模型就是通过神经网络去分析各个特征所占的权值。最后进行一次函数变换就可以确定输出的结果了。</p>\n<hr>\n<p>个人对于数据挖掘的理解暂时只有这些，感谢阅读。</p>\n<p>cheers！</p>\n","site":{"data":{}},"excerpt":"<p>在16年的12月份我接触到的数据挖掘，也就是上个月，在很久很久以前就已经听说过这方面的东西，也一直都很想要学习一下数据挖掘这门技术，正巧上个月学校有一个数据挖掘的兴趣小组。故事就从这里开始了。。。</p>","more":"<h3 id=\"整体的流程\"><a href=\"#整体的流程\" class=\"headerlink\" title=\"整体的流程\"></a>整体的流程</h3><p>虽然我现在连一个完整的项目都还没有做过，但是我就是想要写一下，用百度去搜数据挖掘的相关资料时，上面都是一些非常深奥的东西，对于像我这种新手不是十分友好，所以我就想要来写一些大概的流程，如果有大神发现有错误的话欢迎来指正。</p>\n<p>总体的流程一共有几步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">取得数据-&gt;样本划分-&gt;特征提取-&gt;合并为数据集-&gt;训练模型-&gt;选取最优模型-&gt;end</span><br></pre></td></tr></table></figure>\n<h3 id=\"取得数据\"><a href=\"#取得数据\" class=\"headerlink\" title=\"取得数据\"></a>取得数据</h3><p>这个感觉没什么说的，如果是比赛的话就直接下载就行了，如果是做项目就在数据库里面去提就行了。</p>\n<h3 id=\"样本划分\"><a href=\"#样本划分\" class=\"headerlink\" title=\"样本划分\"></a>样本划分</h3><p>在学习的时候就因为对这个概念的理解不正确以及对整体流程掌握的不正确而走了许多弯路。</p>\n<p>数据集有三个，分别是训练集，验证集以及测试集。三个数据集的基本形式应该是相同的，只是在过程中的作用不同而名字也不同。顾名思义，训练集的作用就是训练模型，验证集的作用就是验证模型预测的准确度，测试集就是放在线上进行测试的数据集。</p>\n<h3 id=\"特征提取\"><a href=\"#特征提取\" class=\"headerlink\" title=\"特征提取\"></a>特征提取</h3><p>特征提取是根据划分之后的样本通过改变不同的特征提取的规则进行样本的特征的提取的工作。特征就是对样本的描述，作用就是将特征与样本数据合并进行模型的训练。</p>\n<p>为什么要进行特征的提取？</p>\n<p>这个问题我有想过，通过了解人工神经网络有了一些认识。</p>\n<p>个人理解来说，训练出来的模型更像是一个数学公式，也就是我们大家都很熟悉的n元一次方程。</p>\n<h3 id=\"简单了解神经网络\"><a href=\"#简单了解神经网络\" class=\"headerlink\" title=\"简单了解神经网络\"></a>简单了解神经网络</h3><p>通过阅读吴军博士的《数学之美》（第二版），非常浅显的了解了一些神经网络。</p>\n<p>训练模型的过程个人觉得和神经网络应该有一些联系，神经网络如图：</p>\n<p><img src=\"/img/20170122_1.jpg\" alt=\"neural network\"></p>\n<p>神经网络分为几部分：输入端，神经元，输出端。</p>\n<p>输入端就是key，神经元就是特征以及其所占权值，训练集中输出端就是标签，测试集中输出端就是结果了。</p>\n<p>训练模型就是通过神经网络去分析各个特征所占的权值。最后进行一次函数变换就可以确定输出的结果了。</p>\n<hr>\n<p>个人对于数据挖掘的理解暂时只有这些，感谢阅读。</p>\n<p>cheers！</p>"},{"title":"基于nodejs的web server","date":"2017-01-23T01:35:45.000Z","_content":"\n有的同学可能很不理解，明明有那么多好用的nodejs的框架，你为什么要自己写一个，况且你写的肯定没有那些框架的用起来稳定，也没有那么舒服。\n\n原因很简单，那次鹅厂的实习生面试，二面时面试官说用express做的后端没有什么技术含量。我觉得很有道理，想了很久什么样的框架用起来有技术含量。最后决定自己写一个。在写本篇博客过程中也重新梳理了一番思路，并对一些功能进行修改，在之后我会对框架进行修改。\n\n这篇博客中代码不会有很多，还有很多的地方只是一些思想而已，目前并没有抽象为代码。不说闲话，上干货\n\n<!--more-->\n\n### router整体思路\n\n现在在网上有很多的简单运行一个http server的demo\n```javascript\nvar http = require(\"http\");\n\nhttp.createServer(function(req,res){\n    res.write(\"hello world\");\n    res.end();\n}).listen(3000);\n```\n大概就是这样，这个很简单，但是如果想要自己来写一个server的话这些还远远不够。\n\n首先要知道，nodejs是事件驱动模型，也就是每当有一个请求到了监听的端口时，都会运行一次httpserver回调函数的代码，所以我们可以根据这个进行路由的分发。\n\n那么路由的分发也会分成几个部分，比如想要托管一部分的静态资源，并且进行缓存的控制，如访问某一个文件夹时自动返回index.html文件等简单功能，另外的就是通过自定义接口 比如\n```javascript\napp.get(\"url\",function(req,res){\n    res.writeHead(200);\n    res.end();\n});\n```\n这个就需要自己来编写对应的一些代码。还有一些功能就不一一列举了。\n\n### 路由分发\n\n![路由分发](/img/20170123_1.svg)\n\n路由分发最基本的操作就是url的解析，这个有原生的url模块支撑，具体用法为   \n```javascript\nurl.parse(req,url);\n```\n分为两部分：\n\n - 静态资源\n\n 可能有的同学会很不理解，静态资源的托管不是应该给服务器做的东西么，我从前知道的所有后端只需要配置跟文件目录就可以了。这个就是不同语言的不同之处了。node的httpserver是直接监听的端口，而静态资源究其根本也是一个get请求。所以这个也需要进行路由的分发，只不过是将静态资源的请求分发到同一个接口进行处理。\n\n 具体的操作是将解析后的url进行正则匹配判断是否为静态资源，如果是静态资源的话就使用req，res作为参数传到另外一个函数中进行操作。\n\n 在另外一个函数中进行资源的查找，分别判断是否存在（fs.exists），以及客户端资源是否与本地资源相同（fs.stat）也就是判断是否应该返回304.\n\n - 自定义接口\n\n 这部分算是重头戏了，因为这才是我们做路由所需要的最多的地方。这部分的流程图如下\n\n ![自定义接口](/img/20170123_2.svg)\n\n 以前遇到过有个同学对这个流程有一些质疑，因为看起来这个流程有一些复杂，每次都要进行很多的判断，而且看起来和静态资源托管部分有重复。\n\n 这部分有一个优先级问题，我认为自定义接口优先级大于静态资源，所以这部分我的做法是这样的，也可以每次先进行静态资源的判断，即为\n\n ![另一种方法](/img/20170123_3.svg)\n\n 如果两种方法都想要用的话就可以通过进行一些参数的设置进行更改不同的流程，这个应该比较简单了。\n\n ---\n 接下来是自定义接口的定义，存储以及匹配问题，我个人在最开始的时候想到的方法是通过两个数组进行存储，当然这个方法很不稳定，经常会有出错的时候，大致就是接口的key,value在不同数组分别存储，然后通过array.indexOf进行判断key是否存在以及value的提取。\n\n 但是因为上述方法在实际测试中很不稳定，所以在当时重新梳理了一番思路，使用了另外一种方法，也就是key:value形式，使用object进行存储。这个方法还有一种好处就是可以很简单的实现app.use方法。\n\n 具体的数据形式就是\n```javascript\nrouterpool{\n  \"url\":{\n    method:{\n      \"get\":function,\n      \"post\":function\n    }\n  }\n  \"url2\":{\n    method:{\n      \"get\":function,\n      \"post\":function\n    }\n    children:{\n      \"1\":{\n        method:{\n          \"get\":function,\n          \"post\":function\n        }\n      }\n    }\n  }\n}\n```\n\n 上面的就是通过\n\n ```javascript\n app.get(\"url\", function(req,res){});\n app.post(\"url\", function(req,res){});\n app.get(\"url2\", function(req,res){});\n app.post(\"url2\", function(req,res){});\n app.use(\"url2\", function(req,res){\n    app.get(\"1\", function(req,res){});\n    app.post(\"1\", function(req,res){});\n })\n ```\n 所构造的数据格式。实际访问的就是\"url\",\"url2/1\"。这两个地址，通过不同的方法访问会有不同的代码。\n\n 判断是否存在接口就是用routerpool[url][method][req.method]判断是否存在，以及通过调用的方法不同进行fucntion的选择。\n\n ---\n\n 以上就是当前我对自己写httpserver的一些思想，心得，理解。感谢阅读\n\n cheers！","source":"_posts/node-route.md","raw":"---\ntitle: 基于nodejs的web server\ndate: 2017-01-23 09:35:45\ncategories: 技术\ntags: nodejs\n---\n\n有的同学可能很不理解，明明有那么多好用的nodejs的框架，你为什么要自己写一个，况且你写的肯定没有那些框架的用起来稳定，也没有那么舒服。\n\n原因很简单，那次鹅厂的实习生面试，二面时面试官说用express做的后端没有什么技术含量。我觉得很有道理，想了很久什么样的框架用起来有技术含量。最后决定自己写一个。在写本篇博客过程中也重新梳理了一番思路，并对一些功能进行修改，在之后我会对框架进行修改。\n\n这篇博客中代码不会有很多，还有很多的地方只是一些思想而已，目前并没有抽象为代码。不说闲话，上干货\n\n<!--more-->\n\n### router整体思路\n\n现在在网上有很多的简单运行一个http server的demo\n```javascript\nvar http = require(\"http\");\n\nhttp.createServer(function(req,res){\n    res.write(\"hello world\");\n    res.end();\n}).listen(3000);\n```\n大概就是这样，这个很简单，但是如果想要自己来写一个server的话这些还远远不够。\n\n首先要知道，nodejs是事件驱动模型，也就是每当有一个请求到了监听的端口时，都会运行一次httpserver回调函数的代码，所以我们可以根据这个进行路由的分发。\n\n那么路由的分发也会分成几个部分，比如想要托管一部分的静态资源，并且进行缓存的控制，如访问某一个文件夹时自动返回index.html文件等简单功能，另外的就是通过自定义接口 比如\n```javascript\napp.get(\"url\",function(req,res){\n    res.writeHead(200);\n    res.end();\n});\n```\n这个就需要自己来编写对应的一些代码。还有一些功能就不一一列举了。\n\n### 路由分发\n\n![路由分发](/img/20170123_1.svg)\n\n路由分发最基本的操作就是url的解析，这个有原生的url模块支撑，具体用法为   \n```javascript\nurl.parse(req,url);\n```\n分为两部分：\n\n - 静态资源\n\n 可能有的同学会很不理解，静态资源的托管不是应该给服务器做的东西么，我从前知道的所有后端只需要配置跟文件目录就可以了。这个就是不同语言的不同之处了。node的httpserver是直接监听的端口，而静态资源究其根本也是一个get请求。所以这个也需要进行路由的分发，只不过是将静态资源的请求分发到同一个接口进行处理。\n\n 具体的操作是将解析后的url进行正则匹配判断是否为静态资源，如果是静态资源的话就使用req，res作为参数传到另外一个函数中进行操作。\n\n 在另外一个函数中进行资源的查找，分别判断是否存在（fs.exists），以及客户端资源是否与本地资源相同（fs.stat）也就是判断是否应该返回304.\n\n - 自定义接口\n\n 这部分算是重头戏了，因为这才是我们做路由所需要的最多的地方。这部分的流程图如下\n\n ![自定义接口](/img/20170123_2.svg)\n\n 以前遇到过有个同学对这个流程有一些质疑，因为看起来这个流程有一些复杂，每次都要进行很多的判断，而且看起来和静态资源托管部分有重复。\n\n 这部分有一个优先级问题，我认为自定义接口优先级大于静态资源，所以这部分我的做法是这样的，也可以每次先进行静态资源的判断，即为\n\n ![另一种方法](/img/20170123_3.svg)\n\n 如果两种方法都想要用的话就可以通过进行一些参数的设置进行更改不同的流程，这个应该比较简单了。\n\n ---\n 接下来是自定义接口的定义，存储以及匹配问题，我个人在最开始的时候想到的方法是通过两个数组进行存储，当然这个方法很不稳定，经常会有出错的时候，大致就是接口的key,value在不同数组分别存储，然后通过array.indexOf进行判断key是否存在以及value的提取。\n\n 但是因为上述方法在实际测试中很不稳定，所以在当时重新梳理了一番思路，使用了另外一种方法，也就是key:value形式，使用object进行存储。这个方法还有一种好处就是可以很简单的实现app.use方法。\n\n 具体的数据形式就是\n```javascript\nrouterpool{\n  \"url\":{\n    method:{\n      \"get\":function,\n      \"post\":function\n    }\n  }\n  \"url2\":{\n    method:{\n      \"get\":function,\n      \"post\":function\n    }\n    children:{\n      \"1\":{\n        method:{\n          \"get\":function,\n          \"post\":function\n        }\n      }\n    }\n  }\n}\n```\n\n 上面的就是通过\n\n ```javascript\n app.get(\"url\", function(req,res){});\n app.post(\"url\", function(req,res){});\n app.get(\"url2\", function(req,res){});\n app.post(\"url2\", function(req,res){});\n app.use(\"url2\", function(req,res){\n    app.get(\"1\", function(req,res){});\n    app.post(\"1\", function(req,res){});\n })\n ```\n 所构造的数据格式。实际访问的就是\"url\",\"url2/1\"。这两个地址，通过不同的方法访问会有不同的代码。\n\n 判断是否存在接口就是用routerpool[url][method][req.method]判断是否存在，以及通过调用的方法不同进行fucntion的选择。\n\n ---\n\n 以上就是当前我对自己写httpserver的一些思想，心得，理解。感谢阅读\n\n cheers！","slug":"node-route","published":1,"updated":"2018-08-13T03:14:40.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjks39xc70006p648g1s45uvo","content":"<p>有的同学可能很不理解，明明有那么多好用的nodejs的框架，你为什么要自己写一个，况且你写的肯定没有那些框架的用起来稳定，也没有那么舒服。</p>\n<p>原因很简单，那次鹅厂的实习生面试，二面时面试官说用express做的后端没有什么技术含量。我觉得很有道理，想了很久什么样的框架用起来有技术含量。最后决定自己写一个。在写本篇博客过程中也重新梳理了一番思路，并对一些功能进行修改，在之后我会对框架进行修改。</p>\n<p>这篇博客中代码不会有很多，还有很多的地方只是一些思想而已，目前并没有抽象为代码。不说闲话，上干货</p>\n<a id=\"more\"></a>\n<h3 id=\"router整体思路\"><a href=\"#router整体思路\" class=\"headerlink\" title=\"router整体思路\"></a>router整体思路</h3><p>现在在网上有很多的简单运行一个http server的demo<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">\"http\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">    res.write(<span class=\"string\">\"hello world\"</span>);</span><br><span class=\"line\">    res.end();</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure></p>\n<p>大概就是这样，这个很简单，但是如果想要自己来写一个server的话这些还远远不够。</p>\n<p>首先要知道，nodejs是事件驱动模型，也就是每当有一个请求到了监听的端口时，都会运行一次httpserver回调函数的代码，所以我们可以根据这个进行路由的分发。</p>\n<p>那么路由的分发也会分成几个部分，比如想要托管一部分的静态资源，并且进行缓存的控制，如访问某一个文件夹时自动返回index.html文件等简单功能，另外的就是通过自定义接口 比如<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">\"url\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">    res.writeHead(<span class=\"number\">200</span>);</span><br><span class=\"line\">    res.end();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>这个就需要自己来编写对应的一些代码。还有一些功能就不一一列举了。</p>\n<h3 id=\"路由分发\"><a href=\"#路由分发\" class=\"headerlink\" title=\"路由分发\"></a>路由分发</h3><p><img src=\"/img/20170123_1.svg\" alt=\"路由分发\"></p>\n<p>路由分发最基本的操作就是url的解析，这个有原生的url模块支撑，具体用法为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url.parse(req,url);</span><br></pre></td></tr></table></figure></p>\n<p>分为两部分：</p>\n<ul>\n<li><p>静态资源</p>\n<p>可能有的同学会很不理解，静态资源的托管不是应该给服务器做的东西么，我从前知道的所有后端只需要配置跟文件目录就可以了。这个就是不同语言的不同之处了。node的httpserver是直接监听的端口，而静态资源究其根本也是一个get请求。所以这个也需要进行路由的分发，只不过是将静态资源的请求分发到同一个接口进行处理。</p>\n<p>具体的操作是将解析后的url进行正则匹配判断是否为静态资源，如果是静态资源的话就使用req，res作为参数传到另外一个函数中进行操作。</p>\n<p>在另外一个函数中进行资源的查找，分别判断是否存在（fs.exists），以及客户端资源是否与本地资源相同（fs.stat）也就是判断是否应该返回304.</p>\n</li>\n<li><p>自定义接口</p>\n<p>这部分算是重头戏了，因为这才是我们做路由所需要的最多的地方。这部分的流程图如下</p>\n<p><img src=\"/img/20170123_2.svg\" alt=\"自定义接口\"></p>\n<p>以前遇到过有个同学对这个流程有一些质疑，因为看起来这个流程有一些复杂，每次都要进行很多的判断，而且看起来和静态资源托管部分有重复。</p>\n<p>这部分有一个优先级问题，我认为自定义接口优先级大于静态资源，所以这部分我的做法是这样的，也可以每次先进行静态资源的判断，即为</p>\n<p><img src=\"/img/20170123_3.svg\" alt=\"另一种方法\"></p>\n<p>如果两种方法都想要用的话就可以通过进行一些参数的设置进行更改不同的流程，这个应该比较简单了。</p>\n</li>\n</ul>\n<hr>\n<p> 接下来是自定义接口的定义，存储以及匹配问题，我个人在最开始的时候想到的方法是通过两个数组进行存储，当然这个方法很不稳定，经常会有出错的时候，大致就是接口的key,value在不同数组分别存储，然后通过array.indexOf进行判断key是否存在以及value的提取。</p>\n<p> 但是因为上述方法在实际测试中很不稳定，所以在当时重新梳理了一番思路，使用了另外一种方法，也就是key:value形式，使用object进行存储。这个方法还有一种好处就是可以很简单的实现app.use方法。</p>\n<p> 具体的数据形式就是<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">routerpool&#123;</span><br><span class=\"line\">  <span class=\"string\">\"url\"</span>:&#123;</span><br><span class=\"line\">    method:&#123;</span><br><span class=\"line\">      <span class=\"string\">\"get\"</span>:<span class=\"function\"><span class=\"keyword\">function</span>,</span></span><br><span class=\"line\"><span class=\"function\">      \"<span class=\"title\">post</span>\":<span class=\"title\">function</span></span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">  \"<span class=\"title\">url2</span>\":</span>&#123;</span><br><span class=\"line\">    method:&#123;</span><br><span class=\"line\">      <span class=\"string\">\"get\"</span>:<span class=\"function\"><span class=\"keyword\">function</span>,</span></span><br><span class=\"line\"><span class=\"function\">      \"<span class=\"title\">post</span>\":<span class=\"title\">function</span></span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">children</span>:</span>&#123;</span><br><span class=\"line\">      <span class=\"string\">\"1\"</span>:&#123;</span><br><span class=\"line\">        method:&#123;</span><br><span class=\"line\">          <span class=\"string\">\"get\"</span>:<span class=\"function\"><span class=\"keyword\">function</span>,</span></span><br><span class=\"line\"><span class=\"function\">          \"<span class=\"title\">post</span>\":<span class=\"title\">function</span></span></span><br><span class=\"line\"><span class=\"function\">        &#125;</span></span><br><span class=\"line\"><span class=\"function\">      &#125;</span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p> 上面的就是通过</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">\"url\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">app.post(<span class=\"string\">\"url\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">app.get(<span class=\"string\">\"url2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">app.post(<span class=\"string\">\"url2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">app.use(<span class=\"string\">\"url2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">   app.get(<span class=\"string\">\"1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">   app.post(<span class=\"string\">\"1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p> 所构造的数据格式。实际访问的就是”url”,”url2/1”。这两个地址，通过不同的方法访问会有不同的代码。</p>\n<p> 判断是否存在接口就是用routerpool[url][method][req.method]判断是否存在，以及通过调用的方法不同进行fucntion的选择。</p>\n<hr>\n<p> 以上就是当前我对自己写httpserver的一些思想，心得，理解。感谢阅读</p>\n<p> cheers！</p>\n","site":{"data":{}},"excerpt":"<p>有的同学可能很不理解，明明有那么多好用的nodejs的框架，你为什么要自己写一个，况且你写的肯定没有那些框架的用起来稳定，也没有那么舒服。</p>\n<p>原因很简单，那次鹅厂的实习生面试，二面时面试官说用express做的后端没有什么技术含量。我觉得很有道理，想了很久什么样的框架用起来有技术含量。最后决定自己写一个。在写本篇博客过程中也重新梳理了一番思路，并对一些功能进行修改，在之后我会对框架进行修改。</p>\n<p>这篇博客中代码不会有很多，还有很多的地方只是一些思想而已，目前并没有抽象为代码。不说闲话，上干货</p>","more":"<h3 id=\"router整体思路\"><a href=\"#router整体思路\" class=\"headerlink\" title=\"router整体思路\"></a>router整体思路</h3><p>现在在网上有很多的简单运行一个http server的demo<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">\"http\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">    res.write(<span class=\"string\">\"hello world\"</span>);</span><br><span class=\"line\">    res.end();</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure></p>\n<p>大概就是这样，这个很简单，但是如果想要自己来写一个server的话这些还远远不够。</p>\n<p>首先要知道，nodejs是事件驱动模型，也就是每当有一个请求到了监听的端口时，都会运行一次httpserver回调函数的代码，所以我们可以根据这个进行路由的分发。</p>\n<p>那么路由的分发也会分成几个部分，比如想要托管一部分的静态资源，并且进行缓存的控制，如访问某一个文件夹时自动返回index.html文件等简单功能，另外的就是通过自定义接口 比如<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">\"url\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">    res.writeHead(<span class=\"number\">200</span>);</span><br><span class=\"line\">    res.end();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>这个就需要自己来编写对应的一些代码。还有一些功能就不一一列举了。</p>\n<h3 id=\"路由分发\"><a href=\"#路由分发\" class=\"headerlink\" title=\"路由分发\"></a>路由分发</h3><p><img src=\"/img/20170123_1.svg\" alt=\"路由分发\"></p>\n<p>路由分发最基本的操作就是url的解析，这个有原生的url模块支撑，具体用法为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url.parse(req,url);</span><br></pre></td></tr></table></figure></p>\n<p>分为两部分：</p>\n<ul>\n<li><p>静态资源</p>\n<p>可能有的同学会很不理解，静态资源的托管不是应该给服务器做的东西么，我从前知道的所有后端只需要配置跟文件目录就可以了。这个就是不同语言的不同之处了。node的httpserver是直接监听的端口，而静态资源究其根本也是一个get请求。所以这个也需要进行路由的分发，只不过是将静态资源的请求分发到同一个接口进行处理。</p>\n<p>具体的操作是将解析后的url进行正则匹配判断是否为静态资源，如果是静态资源的话就使用req，res作为参数传到另外一个函数中进行操作。</p>\n<p>在另外一个函数中进行资源的查找，分别判断是否存在（fs.exists），以及客户端资源是否与本地资源相同（fs.stat）也就是判断是否应该返回304.</p>\n</li>\n<li><p>自定义接口</p>\n<p>这部分算是重头戏了，因为这才是我们做路由所需要的最多的地方。这部分的流程图如下</p>\n<p><img src=\"/img/20170123_2.svg\" alt=\"自定义接口\"></p>\n<p>以前遇到过有个同学对这个流程有一些质疑，因为看起来这个流程有一些复杂，每次都要进行很多的判断，而且看起来和静态资源托管部分有重复。</p>\n<p>这部分有一个优先级问题，我认为自定义接口优先级大于静态资源，所以这部分我的做法是这样的，也可以每次先进行静态资源的判断，即为</p>\n<p><img src=\"/img/20170123_3.svg\" alt=\"另一种方法\"></p>\n<p>如果两种方法都想要用的话就可以通过进行一些参数的设置进行更改不同的流程，这个应该比较简单了。</p>\n</li>\n</ul>\n<hr>\n<p> 接下来是自定义接口的定义，存储以及匹配问题，我个人在最开始的时候想到的方法是通过两个数组进行存储，当然这个方法很不稳定，经常会有出错的时候，大致就是接口的key,value在不同数组分别存储，然后通过array.indexOf进行判断key是否存在以及value的提取。</p>\n<p> 但是因为上述方法在实际测试中很不稳定，所以在当时重新梳理了一番思路，使用了另外一种方法，也就是key:value形式，使用object进行存储。这个方法还有一种好处就是可以很简单的实现app.use方法。</p>\n<p> 具体的数据形式就是<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">routerpool&#123;</span><br><span class=\"line\">  <span class=\"string\">\"url\"</span>:&#123;</span><br><span class=\"line\">    method:&#123;</span><br><span class=\"line\">      <span class=\"string\">\"get\"</span>:<span class=\"function\"><span class=\"keyword\">function</span>,</span></span><br><span class=\"line\"><span class=\"function\">      \"<span class=\"title\">post</span>\":<span class=\"title\">function</span></span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">  \"<span class=\"title\">url2</span>\":</span>&#123;</span><br><span class=\"line\">    method:&#123;</span><br><span class=\"line\">      <span class=\"string\">\"get\"</span>:<span class=\"function\"><span class=\"keyword\">function</span>,</span></span><br><span class=\"line\"><span class=\"function\">      \"<span class=\"title\">post</span>\":<span class=\"title\">function</span></span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">children</span>:</span>&#123;</span><br><span class=\"line\">      <span class=\"string\">\"1\"</span>:&#123;</span><br><span class=\"line\">        method:&#123;</span><br><span class=\"line\">          <span class=\"string\">\"get\"</span>:<span class=\"function\"><span class=\"keyword\">function</span>,</span></span><br><span class=\"line\"><span class=\"function\">          \"<span class=\"title\">post</span>\":<span class=\"title\">function</span></span></span><br><span class=\"line\"><span class=\"function\">        &#125;</span></span><br><span class=\"line\"><span class=\"function\">      &#125;</span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p> 上面的就是通过</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">\"url\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">app.post(<span class=\"string\">\"url\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">app.get(<span class=\"string\">\"url2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">app.post(<span class=\"string\">\"url2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">app.use(<span class=\"string\">\"url2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">   app.get(<span class=\"string\">\"1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">   app.post(<span class=\"string\">\"1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;&#125;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p> 所构造的数据格式。实际访问的就是”url”,”url2/1”。这两个地址，通过不同的方法访问会有不同的代码。</p>\n<p> 判断是否存在接口就是用routerpool[url][method][req.method]判断是否存在，以及通过调用的方法不同进行fucntion的选择。</p>\n<hr>\n<p> 以上就是当前我对自己写httpserver的一些思想，心得，理解。感谢阅读</p>\n<p> cheers！</p>"},{"title":"tkinter学习之路","date":"2018-08-13T08:32:55.000Z","_content":"\n最近由于工作需要，自学了tkinter的一些东西，在使用过程中遇到了一些问题，现记录下来。\n\n<!-- more -->\n\n# tkinter的使用示例代码\n\n```python\nimport Tkinter as tk\n\nwindow = tk.TK()\nlabel = tk.Label(window, text='Hello world')\nlabel.pack()\nwindow.mainloop()\n\n```\n\n当然了，这段代码是最最简单的几行代码（而且很容易运行了看不到效果，因为gui窗口太小了找不到，我当时\n就没看到，还以为是运行出错了，又没看到错误提示。唉）\n\n# tkinter实现动画效果\n\n## tkinter运行的几个状态\n\n### 创建\n\n```python\nwindow = tk.Tk()\nlabel = tk.Label(window, text='hello world')\n```\n顾名思义，这个阶段是创建各个组件以及进行各种绑定的阶段，在这个阶段不会生成gui的窗口。\n\n在这个阶段需要做的有：gui组件的创建，事件监听的绑定，动画效果的创建\n\n### 布局\n\n作为一个jser，还是更加喜欢用布局这个词\n\n```python\nlabel.pack() || lable.grid() || label.place()\n```\n\n这三个函数分别对应三种不同的布局方式，可以混合使用。\n\n### 事件循环\n\n在创建了窗口之后会执行动画函数，执行了动画函数之后就会进入mainloop，这个也是我觉的tkinter最。。。\n难受的一个机制，江湖人称事件循环态。\n\n在进入了事件循环态后，只有触发了事件才可以进行ui刷新。也就是说，这个阶段不会有类似前端中banner的动画\n\n所以，如果想要有一个什么动画的话，只能通过两种方式，第一种是在mainloop之前通过使用label.after设置一个更新ui的timer；第二种就是通过触发事件的回调函数进行动画的编写，而且，递归无效。。。也就是说，通过回调函数写动画只能通过循环+sleep的方式。\n\nemmm反正就是这么牛批，而且我觉得tkinter是我见过的最丑的gui界面= =。因为自己可以设置的属性相对不多，但是却很实用，而且相对来说学习起来比较快，容易上手，优点与缺点同样明显，所以也就忍了吧。\n\n## 动画效果的实现\n\n```python\nlabel.after(interval, func)\n\nmainloop()\n```\n\n一句话，使用递归，在func内部重新调用after函数，出了递归之后，窗口就会进入事件循环态，非常坑爹。\n\n差不多就总结了这些，see u\n","source":"_posts/something-about-tkinter.md","raw":"---\ntitle: tkinter学习之路\ndate: 2018-08-13 16:32:55\ncategories: 技术\ntags: ['Python','tkinter']\n---\n\n最近由于工作需要，自学了tkinter的一些东西，在使用过程中遇到了一些问题，现记录下来。\n\n<!-- more -->\n\n# tkinter的使用示例代码\n\n```python\nimport Tkinter as tk\n\nwindow = tk.TK()\nlabel = tk.Label(window, text='Hello world')\nlabel.pack()\nwindow.mainloop()\n\n```\n\n当然了，这段代码是最最简单的几行代码（而且很容易运行了看不到效果，因为gui窗口太小了找不到，我当时\n就没看到，还以为是运行出错了，又没看到错误提示。唉）\n\n# tkinter实现动画效果\n\n## tkinter运行的几个状态\n\n### 创建\n\n```python\nwindow = tk.Tk()\nlabel = tk.Label(window, text='hello world')\n```\n顾名思义，这个阶段是创建各个组件以及进行各种绑定的阶段，在这个阶段不会生成gui的窗口。\n\n在这个阶段需要做的有：gui组件的创建，事件监听的绑定，动画效果的创建\n\n### 布局\n\n作为一个jser，还是更加喜欢用布局这个词\n\n```python\nlabel.pack() || lable.grid() || label.place()\n```\n\n这三个函数分别对应三种不同的布局方式，可以混合使用。\n\n### 事件循环\n\n在创建了窗口之后会执行动画函数，执行了动画函数之后就会进入mainloop，这个也是我觉的tkinter最。。。\n难受的一个机制，江湖人称事件循环态。\n\n在进入了事件循环态后，只有触发了事件才可以进行ui刷新。也就是说，这个阶段不会有类似前端中banner的动画\n\n所以，如果想要有一个什么动画的话，只能通过两种方式，第一种是在mainloop之前通过使用label.after设置一个更新ui的timer；第二种就是通过触发事件的回调函数进行动画的编写，而且，递归无效。。。也就是说，通过回调函数写动画只能通过循环+sleep的方式。\n\nemmm反正就是这么牛批，而且我觉得tkinter是我见过的最丑的gui界面= =。因为自己可以设置的属性相对不多，但是却很实用，而且相对来说学习起来比较快，容易上手，优点与缺点同样明显，所以也就忍了吧。\n\n## 动画效果的实现\n\n```python\nlabel.after(interval, func)\n\nmainloop()\n```\n\n一句话，使用递归，在func内部重新调用after函数，出了递归之后，窗口就会进入事件循环态，非常坑爹。\n\n差不多就总结了这些，see u\n","slug":"something-about-tkinter","published":1,"updated":"2018-08-13T09:31:18.245Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjks39xc90007p648733zavkt","content":"<p>最近由于工作需要，自学了tkinter的一些东西，在使用过程中遇到了一些问题，现记录下来。</p>\n<a id=\"more\"></a>\n<h1 id=\"tkinter的使用示例代码\"><a href=\"#tkinter的使用示例代码\" class=\"headerlink\" title=\"tkinter的使用示例代码\"></a>tkinter的使用示例代码</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Tkinter <span class=\"keyword\">as</span> tk</span><br><span class=\"line\"></span><br><span class=\"line\">window = tk.TK()</span><br><span class=\"line\">label = tk.Label(window, text=<span class=\"string\">'Hello world'</span>)</span><br><span class=\"line\">label.pack()</span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n<p>当然了，这段代码是最最简单的几行代码（而且很容易运行了看不到效果，因为gui窗口太小了找不到，我当时<br>就没看到，还以为是运行出错了，又没看到错误提示。唉）</p>\n<h1 id=\"tkinter实现动画效果\"><a href=\"#tkinter实现动画效果\" class=\"headerlink\" title=\"tkinter实现动画效果\"></a>tkinter实现动画效果</h1><h2 id=\"tkinter运行的几个状态\"><a href=\"#tkinter运行的几个状态\" class=\"headerlink\" title=\"tkinter运行的几个状态\"></a>tkinter运行的几个状态</h2><h3 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\">label = tk.Label(window, text=<span class=\"string\">'hello world'</span>)</span><br></pre></td></tr></table></figure>\n<p>顾名思义，这个阶段是创建各个组件以及进行各种绑定的阶段，在这个阶段不会生成gui的窗口。</p>\n<p>在这个阶段需要做的有：gui组件的创建，事件监听的绑定，动画效果的创建</p>\n<h3 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h3><p>作为一个jser，还是更加喜欢用布局这个词</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">label.pack() || lable.grid() || label.place()</span><br></pre></td></tr></table></figure>\n<p>这三个函数分别对应三种不同的布局方式，可以混合使用。</p>\n<h3 id=\"事件循环\"><a href=\"#事件循环\" class=\"headerlink\" title=\"事件循环\"></a>事件循环</h3><p>在创建了窗口之后会执行动画函数，执行了动画函数之后就会进入mainloop，这个也是我觉的tkinter最。。。<br>难受的一个机制，江湖人称事件循环态。</p>\n<p>在进入了事件循环态后，只有触发了事件才可以进行ui刷新。也就是说，这个阶段不会有类似前端中banner的动画</p>\n<p>所以，如果想要有一个什么动画的话，只能通过两种方式，第一种是在mainloop之前通过使用label.after设置一个更新ui的timer；第二种就是通过触发事件的回调函数进行动画的编写，而且，递归无效。。。也就是说，通过回调函数写动画只能通过循环+sleep的方式。</p>\n<p>emmm反正就是这么牛批，而且我觉得tkinter是我见过的最丑的gui界面= =。因为自己可以设置的属性相对不多，但是却很实用，而且相对来说学习起来比较快，容易上手，优点与缺点同样明显，所以也就忍了吧。</p>\n<h2 id=\"动画效果的实现\"><a href=\"#动画效果的实现\" class=\"headerlink\" title=\"动画效果的实现\"></a>动画效果的实现</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">label.after(interval, func)</span><br><span class=\"line\"></span><br><span class=\"line\">mainloop()</span><br></pre></td></tr></table></figure>\n<p>一句话，使用递归，在func内部重新调用after函数，出了递归之后，窗口就会进入事件循环态，非常坑爹。</p>\n<p>差不多就总结了这些，see u</p>\n","site":{"data":{}},"excerpt":"<p>最近由于工作需要，自学了tkinter的一些东西，在使用过程中遇到了一些问题，现记录下来。</p>","more":"<h1 id=\"tkinter的使用示例代码\"><a href=\"#tkinter的使用示例代码\" class=\"headerlink\" title=\"tkinter的使用示例代码\"></a>tkinter的使用示例代码</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Tkinter <span class=\"keyword\">as</span> tk</span><br><span class=\"line\"></span><br><span class=\"line\">window = tk.TK()</span><br><span class=\"line\">label = tk.Label(window, text=<span class=\"string\">'Hello world'</span>)</span><br><span class=\"line\">label.pack()</span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n<p>当然了，这段代码是最最简单的几行代码（而且很容易运行了看不到效果，因为gui窗口太小了找不到，我当时<br>就没看到，还以为是运行出错了，又没看到错误提示。唉）</p>\n<h1 id=\"tkinter实现动画效果\"><a href=\"#tkinter实现动画效果\" class=\"headerlink\" title=\"tkinter实现动画效果\"></a>tkinter实现动画效果</h1><h2 id=\"tkinter运行的几个状态\"><a href=\"#tkinter运行的几个状态\" class=\"headerlink\" title=\"tkinter运行的几个状态\"></a>tkinter运行的几个状态</h2><h3 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\">label = tk.Label(window, text=<span class=\"string\">'hello world'</span>)</span><br></pre></td></tr></table></figure>\n<p>顾名思义，这个阶段是创建各个组件以及进行各种绑定的阶段，在这个阶段不会生成gui的窗口。</p>\n<p>在这个阶段需要做的有：gui组件的创建，事件监听的绑定，动画效果的创建</p>\n<h3 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h3><p>作为一个jser，还是更加喜欢用布局这个词</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">label.pack() || lable.grid() || label.place()</span><br></pre></td></tr></table></figure>\n<p>这三个函数分别对应三种不同的布局方式，可以混合使用。</p>\n<h3 id=\"事件循环\"><a href=\"#事件循环\" class=\"headerlink\" title=\"事件循环\"></a>事件循环</h3><p>在创建了窗口之后会执行动画函数，执行了动画函数之后就会进入mainloop，这个也是我觉的tkinter最。。。<br>难受的一个机制，江湖人称事件循环态。</p>\n<p>在进入了事件循环态后，只有触发了事件才可以进行ui刷新。也就是说，这个阶段不会有类似前端中banner的动画</p>\n<p>所以，如果想要有一个什么动画的话，只能通过两种方式，第一种是在mainloop之前通过使用label.after设置一个更新ui的timer；第二种就是通过触发事件的回调函数进行动画的编写，而且，递归无效。。。也就是说，通过回调函数写动画只能通过循环+sleep的方式。</p>\n<p>emmm反正就是这么牛批，而且我觉得tkinter是我见过的最丑的gui界面= =。因为自己可以设置的属性相对不多，但是却很实用，而且相对来说学习起来比较快，容易上手，优点与缺点同样明显，所以也就忍了吧。</p>\n<h2 id=\"动画效果的实现\"><a href=\"#动画效果的实现\" class=\"headerlink\" title=\"动画效果的实现\"></a>动画效果的实现</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">label.after(interval, func)</span><br><span class=\"line\"></span><br><span class=\"line\">mainloop()</span><br></pre></td></tr></table></figure>\n<p>一句话，使用递归，在func内部重新调用after函数，出了递归之后，窗口就会进入事件循环态，非常坑爹。</p>\n<p>差不多就总结了这些，see u</p>"},{"title":"基于nodejs的web server II","date":"2017-01-26T12:57:46.000Z","_content":"在写上一篇博客的过程中，一边思考一边进行整体框架的构思，感觉思路很清晰，于是这几天过年的事情忙完了之后在今天下午进行了webserver的改进。\n\n比如对routepool数据结构的改进，对流程的进一步完善。\n\n<!--more-->\n\n### 路由流程的完善\n\n目前这个hexo的博客还是部署在github上，但是github的空间只有300m，如果以后一直写的话总会有一天空间不够，所以肯定是需要将博客部署到自己的服务器上面。这样的话就需要了解一下hexo的访问方式。\n\nhexo的博客编写起来结构有一些复杂，需要解析markdown进行html的生成。但是这部分我暂时还没有研究到，只是看了一下文件结构，感觉博客的主体思想就是使用模板，将markdown中的内容解析到模板当中，至于具体是如何生成暂时还没有了解。但是整体的思想了解了之后就知道如何将hexo生成的文件放在自己的服务器上能够被用户访问到。\n\n简单来说，想要实现上述效果只是需要在路由时进行静态资源的判断。也就是访问到路径所指向的文件夹时进行一次index.html是否存在的判断。\n\n由于在流程中多次需要用到文件存在的判断以及静态资源的读取，返回。所以将这两个环节抽象为两个函数。\n```javascript\nconst fileExist = function(pathname, existfn, unexistfn){\n    fs.exists(pathname, function(exist){\n        if(exist){\n            existfn();\n        }\n        else{\n            unexistfn();\n        }\n    })\n};\n\nconst staticFile = function(req,res,pathname,ext){\n    let raw = fs.createReadStream(pathname);\n    let acceptEncoding = req.headers['accept-encoding'] || \"\";\n    let matched = ext.match(headers.fileMatch);\n    let expires = new Date();\n    expires.setTime(expires.getTime() + headers.maxAge * 1000);\n    res.setHeader(\"Expires\", expires.toUTCString());\n    res.setHeader(\"Cache-Control\", \"max-age=\" + headers.maxAge);\n    //判断304\n    fs.stat(pathname, function (err, stat) {\n        if (err) {\n            console.log(err);\n        } else {\n            lastModified = stat.mtime.toUTCString();\n            res.setHeader(\"Last-Modified\", lastModified);\n            if (req.headers['if-modified-since'] && lastModified == req.headers['if-modified-since']) {\n                res.writeHead(304, \"Not Modified\");\n                res.end();\n            }\n            //如果不是304\n            else {\n                if (matched && acceptEncoding.match(/\\bgzip\\b/)) {\n                    res.writeHead(200, \"Ok\", {\n                        'Content-Encoding': 'gzip',\n                        'content-Type':header[matched[0]]\n                    });\n                    raw.pipe(zlib.createGzip()).pipe(res);\n\n                } else if (matched && acceptEncoding.match(/\\bdeflate\\b/)) {\n                    res.writeHead(200, \"Ok\", {\n                        'Content-Encoding': 'deflate',\n                        'content-Type':header[matched[0]]\n                    });\n                    raw.pipe(zlib.createDeflate()).pipe(res);\n                } else {\n                    res.writeHead(200, \"Ok\",{\n                        'content-Type':header[matched[0]]\n                    });\n                    raw.pipe(res);\n                }\n            }\n        }\n    });\n};\n```\n\n### 路由流程的控制\n\n编写完静态资源以及判断文件是否存在方法之后就要进行流程的控制了，代码如下：\n```javascript\nlet pathname = url.parse(req.url);\nlet pathN = pathname.pathname;\nlet ext = path.extname(pathN);\nlet headers = {\n    fileMatch: /^(gif|png|jpg|js|css|html)$/ig,\n    maxAge: 60 * 60\n};\next = ext ? ext.slice(1) : 'unknown:';\nif (ext.match(headers.fileMatch)) {\n    this.staticFile(req,res,pathN,ext);\n}\nelse{\n    res.send = function(obj,str){\n        if(str === 'json'){\n            res.writeHead(200,{'content-Type':'application/json'});\n            res.end(JSON.stringify(obj));\n        }\n    };\n    if(req.method === 'GET'){\n        req.query = querystring.parse(pathN.query);\n        that.router(req.method.toLowerCase(),pathN,req,res);\n    }\n    else if(req.method === 'POST'){\n        req.setEncoding('utf-8');\n        let postData = \"\",params;\n        req.addListener(\"data\", function (postDataChunk) {\n            postData += postDataChunk;\n        });\n        req.addListener(\"end\", function () {\n            params = querystring.parse(postData);\n            req.query = params;\n            that.router(req.method.toLowerCase(),pathN,req,res);\n        });\n    }\n}\n```\n这部分代码用于路由流程的控制，以及将get，post请求所发送的数据分别解析出来，get请求大部分情况下是在url中添加数据，而post请求则需要进行监听，因为是分段发送，至于为什么post请求是分段发送，我在百度中没有找到靠谱的答案，面试中也有被问到过，答得也不是特别满意，如果有知道的同学可以在下面留言，感谢。\n\n### routepool数据结构的设定\n\nroutepool是路由的根本，所以，将routepool设为私有属性，app的get,post,use方法的作用相当于routepool的setter，而app.route则相当于routepool的getter。\n```javascript\nconst fileExist = function(pathname, existfn, unexistfn){\n    fs.exists(pathname, function(exist){\n        if(exist){\n            existfn();\n        }\n        else{\n            unexistfn();\n        }\n    })\n};\nlet routerpool = {};\nlet pool = routerpool;\napp = {\n\tpost: function (str, callback) {\n        routerInit(str, pool);\n        pool[str][\"method\"][\"post\"] = callback;\n        return this;\n    },\n    get: function (str, callback) {\n        routerInit(str, pool);\n        pool[str][\"method\"][\"get\"] = callback;\n        return this;\n    },\n    use: function (str, callback) {\n        routerpool[str] = {};\n        routerpool[str][\"children\"] = {};\n        pool = routerpool[str][\"children\"];\n        callback();\n        pool = routerpool;\n        return this;\n    },\n    router: function (method, str, req, res) {\n        let callback;\n        let that = this;\n        if ((callback = routerExist(str,method))) {\n            callback(req,res);\n        }\n        else {\n            fileExist(\"public/view\"+str+\"/index.html\", function(){\n                staticFile(req,res,\"public/view\"+str+\"/index.html\",\"html\");\n            },function(){\n                if(routerpool[\"/404\"]){\n                    routerpool[\"/404\"][\"method\"][\"get\"](req, res);\n                }\n                else{\n                    res.writeHead(404, \"Not found\");\n                    res.end();\n                }\n            })\n        }\n    },\n}\n```\n目前use方法只能添加一层，且暂时没有添加通配符功能，通配符功能感觉有一些复杂，但是添加的话也应该是在router中进行添加路由匹配的另一种规则。\n\n以上就是我对于web server的一些尝试，欢迎感兴趣的同学一起来讨论。感谢阅读\n\ncheers！","source":"_posts/nodejs-webserver-ii.md","raw":"---\ntitle: 基于nodejs的web server II\ndate: 2017-01-26 20:57:46\ncategories: 技术\ntags: nodejs\n---\n在写上一篇博客的过程中，一边思考一边进行整体框架的构思，感觉思路很清晰，于是这几天过年的事情忙完了之后在今天下午进行了webserver的改进。\n\n比如对routepool数据结构的改进，对流程的进一步完善。\n\n<!--more-->\n\n### 路由流程的完善\n\n目前这个hexo的博客还是部署在github上，但是github的空间只有300m，如果以后一直写的话总会有一天空间不够，所以肯定是需要将博客部署到自己的服务器上面。这样的话就需要了解一下hexo的访问方式。\n\nhexo的博客编写起来结构有一些复杂，需要解析markdown进行html的生成。但是这部分我暂时还没有研究到，只是看了一下文件结构，感觉博客的主体思想就是使用模板，将markdown中的内容解析到模板当中，至于具体是如何生成暂时还没有了解。但是整体的思想了解了之后就知道如何将hexo生成的文件放在自己的服务器上能够被用户访问到。\n\n简单来说，想要实现上述效果只是需要在路由时进行静态资源的判断。也就是访问到路径所指向的文件夹时进行一次index.html是否存在的判断。\n\n由于在流程中多次需要用到文件存在的判断以及静态资源的读取，返回。所以将这两个环节抽象为两个函数。\n```javascript\nconst fileExist = function(pathname, existfn, unexistfn){\n    fs.exists(pathname, function(exist){\n        if(exist){\n            existfn();\n        }\n        else{\n            unexistfn();\n        }\n    })\n};\n\nconst staticFile = function(req,res,pathname,ext){\n    let raw = fs.createReadStream(pathname);\n    let acceptEncoding = req.headers['accept-encoding'] || \"\";\n    let matched = ext.match(headers.fileMatch);\n    let expires = new Date();\n    expires.setTime(expires.getTime() + headers.maxAge * 1000);\n    res.setHeader(\"Expires\", expires.toUTCString());\n    res.setHeader(\"Cache-Control\", \"max-age=\" + headers.maxAge);\n    //判断304\n    fs.stat(pathname, function (err, stat) {\n        if (err) {\n            console.log(err);\n        } else {\n            lastModified = stat.mtime.toUTCString();\n            res.setHeader(\"Last-Modified\", lastModified);\n            if (req.headers['if-modified-since'] && lastModified == req.headers['if-modified-since']) {\n                res.writeHead(304, \"Not Modified\");\n                res.end();\n            }\n            //如果不是304\n            else {\n                if (matched && acceptEncoding.match(/\\bgzip\\b/)) {\n                    res.writeHead(200, \"Ok\", {\n                        'Content-Encoding': 'gzip',\n                        'content-Type':header[matched[0]]\n                    });\n                    raw.pipe(zlib.createGzip()).pipe(res);\n\n                } else if (matched && acceptEncoding.match(/\\bdeflate\\b/)) {\n                    res.writeHead(200, \"Ok\", {\n                        'Content-Encoding': 'deflate',\n                        'content-Type':header[matched[0]]\n                    });\n                    raw.pipe(zlib.createDeflate()).pipe(res);\n                } else {\n                    res.writeHead(200, \"Ok\",{\n                        'content-Type':header[matched[0]]\n                    });\n                    raw.pipe(res);\n                }\n            }\n        }\n    });\n};\n```\n\n### 路由流程的控制\n\n编写完静态资源以及判断文件是否存在方法之后就要进行流程的控制了，代码如下：\n```javascript\nlet pathname = url.parse(req.url);\nlet pathN = pathname.pathname;\nlet ext = path.extname(pathN);\nlet headers = {\n    fileMatch: /^(gif|png|jpg|js|css|html)$/ig,\n    maxAge: 60 * 60\n};\next = ext ? ext.slice(1) : 'unknown:';\nif (ext.match(headers.fileMatch)) {\n    this.staticFile(req,res,pathN,ext);\n}\nelse{\n    res.send = function(obj,str){\n        if(str === 'json'){\n            res.writeHead(200,{'content-Type':'application/json'});\n            res.end(JSON.stringify(obj));\n        }\n    };\n    if(req.method === 'GET'){\n        req.query = querystring.parse(pathN.query);\n        that.router(req.method.toLowerCase(),pathN,req,res);\n    }\n    else if(req.method === 'POST'){\n        req.setEncoding('utf-8');\n        let postData = \"\",params;\n        req.addListener(\"data\", function (postDataChunk) {\n            postData += postDataChunk;\n        });\n        req.addListener(\"end\", function () {\n            params = querystring.parse(postData);\n            req.query = params;\n            that.router(req.method.toLowerCase(),pathN,req,res);\n        });\n    }\n}\n```\n这部分代码用于路由流程的控制，以及将get，post请求所发送的数据分别解析出来，get请求大部分情况下是在url中添加数据，而post请求则需要进行监听，因为是分段发送，至于为什么post请求是分段发送，我在百度中没有找到靠谱的答案，面试中也有被问到过，答得也不是特别满意，如果有知道的同学可以在下面留言，感谢。\n\n### routepool数据结构的设定\n\nroutepool是路由的根本，所以，将routepool设为私有属性，app的get,post,use方法的作用相当于routepool的setter，而app.route则相当于routepool的getter。\n```javascript\nconst fileExist = function(pathname, existfn, unexistfn){\n    fs.exists(pathname, function(exist){\n        if(exist){\n            existfn();\n        }\n        else{\n            unexistfn();\n        }\n    })\n};\nlet routerpool = {};\nlet pool = routerpool;\napp = {\n\tpost: function (str, callback) {\n        routerInit(str, pool);\n        pool[str][\"method\"][\"post\"] = callback;\n        return this;\n    },\n    get: function (str, callback) {\n        routerInit(str, pool);\n        pool[str][\"method\"][\"get\"] = callback;\n        return this;\n    },\n    use: function (str, callback) {\n        routerpool[str] = {};\n        routerpool[str][\"children\"] = {};\n        pool = routerpool[str][\"children\"];\n        callback();\n        pool = routerpool;\n        return this;\n    },\n    router: function (method, str, req, res) {\n        let callback;\n        let that = this;\n        if ((callback = routerExist(str,method))) {\n            callback(req,res);\n        }\n        else {\n            fileExist(\"public/view\"+str+\"/index.html\", function(){\n                staticFile(req,res,\"public/view\"+str+\"/index.html\",\"html\");\n            },function(){\n                if(routerpool[\"/404\"]){\n                    routerpool[\"/404\"][\"method\"][\"get\"](req, res);\n                }\n                else{\n                    res.writeHead(404, \"Not found\");\n                    res.end();\n                }\n            })\n        }\n    },\n}\n```\n目前use方法只能添加一层，且暂时没有添加通配符功能，通配符功能感觉有一些复杂，但是添加的话也应该是在router中进行添加路由匹配的另一种规则。\n\n以上就是我对于web server的一些尝试，欢迎感兴趣的同学一起来讨论。感谢阅读\n\ncheers！","slug":"nodejs-webserver-ii","published":1,"updated":"2018-08-13T03:14:40.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjks39xcc000bp648qki8vjvv","content":"<p>在写上一篇博客的过程中，一边思考一边进行整体框架的构思，感觉思路很清晰，于是这几天过年的事情忙完了之后在今天下午进行了webserver的改进。</p>\n<p>比如对routepool数据结构的改进，对流程的进一步完善。</p>\n<a id=\"more\"></a>\n<h3 id=\"路由流程的完善\"><a href=\"#路由流程的完善\" class=\"headerlink\" title=\"路由流程的完善\"></a>路由流程的完善</h3><p>目前这个hexo的博客还是部署在github上，但是github的空间只有300m，如果以后一直写的话总会有一天空间不够，所以肯定是需要将博客部署到自己的服务器上面。这样的话就需要了解一下hexo的访问方式。</p>\n<p>hexo的博客编写起来结构有一些复杂，需要解析markdown进行html的生成。但是这部分我暂时还没有研究到，只是看了一下文件结构，感觉博客的主体思想就是使用模板，将markdown中的内容解析到模板当中，至于具体是如何生成暂时还没有了解。但是整体的思想了解了之后就知道如何将hexo生成的文件放在自己的服务器上能够被用户访问到。</p>\n<p>简单来说，想要实现上述效果只是需要在路由时进行静态资源的判断。也就是访问到路径所指向的文件夹时进行一次index.html是否存在的判断。</p>\n<p>由于在流程中多次需要用到文件存在的判断以及静态资源的读取，返回。所以将这两个环节抽象为两个函数。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fileExist = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">pathname, existfn, unexistfn</span>)</span>&#123;</span><br><span class=\"line\">    fs.exists(pathname, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">exist</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(exist)&#123;</span><br><span class=\"line\">            existfn();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            unexistfn();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> staticFile = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res,pathname,ext</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> raw = fs.createReadStream(pathname);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> acceptEncoding = req.headers[<span class=\"string\">'accept-encoding'</span>] || <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> matched = ext.match(headers.fileMatch);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> expires = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    expires.setTime(expires.getTime() + headers.maxAge * <span class=\"number\">1000</span>);</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">\"Expires\"</span>, expires.toUTCString());</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">\"Cache-Control\"</span>, <span class=\"string\">\"max-age=\"</span> + headers.maxAge);</span><br><span class=\"line\">    <span class=\"comment\">//判断304</span></span><br><span class=\"line\">    fs.stat(pathname, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, stat</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            lastModified = stat.mtime.toUTCString();</span><br><span class=\"line\">            res.setHeader(<span class=\"string\">\"Last-Modified\"</span>, lastModified);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (req.headers[<span class=\"string\">'if-modified-since'</span>] &amp;&amp; lastModified == req.headers[<span class=\"string\">'if-modified-since'</span>]) &#123;</span><br><span class=\"line\">                res.writeHead(<span class=\"number\">304</span>, <span class=\"string\">\"Not Modified\"</span>);</span><br><span class=\"line\">                res.end();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//如果不是304</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (matched &amp;&amp; acceptEncoding.match(<span class=\"regexp\">/\\bgzip\\b/</span>)) &#123;</span><br><span class=\"line\">                    res.writeHead(<span class=\"number\">200</span>, <span class=\"string\">\"Ok\"</span>, &#123;</span><br><span class=\"line\">                        <span class=\"string\">'Content-Encoding'</span>: <span class=\"string\">'gzip'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'content-Type'</span>:header[matched[<span class=\"number\">0</span>]]</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                    raw.pipe(zlib.createGzip()).pipe(res);</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (matched &amp;&amp; acceptEncoding.match(<span class=\"regexp\">/\\bdeflate\\b/</span>)) &#123;</span><br><span class=\"line\">                    res.writeHead(<span class=\"number\">200</span>, <span class=\"string\">\"Ok\"</span>, &#123;</span><br><span class=\"line\">                        <span class=\"string\">'Content-Encoding'</span>: <span class=\"string\">'deflate'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'content-Type'</span>:header[matched[<span class=\"number\">0</span>]]</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                    raw.pipe(zlib.createDeflate()).pipe(res);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    res.writeHead(<span class=\"number\">200</span>, <span class=\"string\">\"Ok\"</span>,&#123;</span><br><span class=\"line\">                        <span class=\"string\">'content-Type'</span>:header[matched[<span class=\"number\">0</span>]]</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                    raw.pipe(res);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"路由流程的控制\"><a href=\"#路由流程的控制\" class=\"headerlink\" title=\"路由流程的控制\"></a>路由流程的控制</h3><p>编写完静态资源以及判断文件是否存在方法之后就要进行流程的控制了，代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> pathname = url.parse(req.url);</span><br><span class=\"line\"><span class=\"keyword\">let</span> pathN = pathname.pathname;</span><br><span class=\"line\"><span class=\"keyword\">let</span> ext = path.extname(pathN);</span><br><span class=\"line\"><span class=\"keyword\">let</span> headers = &#123;</span><br><span class=\"line\">    fileMatch: <span class=\"regexp\">/^(gif|png|jpg|js|css|html)$/ig</span>,</span><br><span class=\"line\">    maxAge: <span class=\"number\">60</span> * <span class=\"number\">60</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">ext = ext ? ext.slice(<span class=\"number\">1</span>) : <span class=\"string\">'unknown:'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (ext.match(headers.fileMatch)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.staticFile(req,res,pathN,ext);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    res.send = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj,str</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(str === <span class=\"string\">'json'</span>)&#123;</span><br><span class=\"line\">            res.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">'content-Type'</span>:<span class=\"string\">'application/json'</span>&#125;);</span><br><span class=\"line\">            res.end(<span class=\"built_in\">JSON</span>.stringify(obj));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(req.method === <span class=\"string\">'GET'</span>)&#123;</span><br><span class=\"line\">        req.query = querystring.parse(pathN.query);</span><br><span class=\"line\">        that.router(req.method.toLowerCase(),pathN,req,res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(req.method === <span class=\"string\">'POST'</span>)&#123;</span><br><span class=\"line\">        req.setEncoding(<span class=\"string\">'utf-8'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> postData = <span class=\"string\">\"\"</span>,params;</span><br><span class=\"line\">        req.addListener(<span class=\"string\">\"data\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">postDataChunk</span>) </span>&#123;</span><br><span class=\"line\">            postData += postDataChunk;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        req.addListener(<span class=\"string\">\"end\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            params = querystring.parse(postData);</span><br><span class=\"line\">            req.query = params;</span><br><span class=\"line\">            that.router(req.method.toLowerCase(),pathN,req,res);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这部分代码用于路由流程的控制，以及将get，post请求所发送的数据分别解析出来，get请求大部分情况下是在url中添加数据，而post请求则需要进行监听，因为是分段发送，至于为什么post请求是分段发送，我在百度中没有找到靠谱的答案，面试中也有被问到过，答得也不是特别满意，如果有知道的同学可以在下面留言，感谢。</p>\n<h3 id=\"routepool数据结构的设定\"><a href=\"#routepool数据结构的设定\" class=\"headerlink\" title=\"routepool数据结构的设定\"></a>routepool数据结构的设定</h3><p>routepool是路由的根本，所以，将routepool设为私有属性，app的get,post,use方法的作用相当于routepool的setter，而app.route则相当于routepool的getter。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fileExist = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">pathname, existfn, unexistfn</span>)</span>&#123;</span><br><span class=\"line\">    fs.exists(pathname, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">exist</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(exist)&#123;</span><br><span class=\"line\">            existfn();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            unexistfn();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> routerpool = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> pool = routerpool;</span><br><span class=\"line\">app = &#123;</span><br><span class=\"line\">\tpost: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str, callback</span>) </span>&#123;</span><br><span class=\"line\">        routerInit(str, pool);</span><br><span class=\"line\">        pool[str][<span class=\"string\">\"method\"</span>][<span class=\"string\">\"post\"</span>] = callback;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str, callback</span>) </span>&#123;</span><br><span class=\"line\">        routerInit(str, pool);</span><br><span class=\"line\">        pool[str][<span class=\"string\">\"method\"</span>][<span class=\"string\">\"get\"</span>] = callback;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    use: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str, callback</span>) </span>&#123;</span><br><span class=\"line\">        routerpool[str] = &#123;&#125;;</span><br><span class=\"line\">        routerpool[str][<span class=\"string\">\"children\"</span>] = &#123;&#125;;</span><br><span class=\"line\">        pool = routerpool[str][<span class=\"string\">\"children\"</span>];</span><br><span class=\"line\">        callback();</span><br><span class=\"line\">        pool = routerpool;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    router: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">method, str, req, res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> callback;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((callback = routerExist(str,method))) &#123;</span><br><span class=\"line\">            callback(req,res);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            fileExist(<span class=\"string\">\"public/view\"</span>+str+<span class=\"string\">\"/index.html\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                staticFile(req,res,<span class=\"string\">\"public/view\"</span>+str+<span class=\"string\">\"/index.html\"</span>,<span class=\"string\">\"html\"</span>);</span><br><span class=\"line\">            &#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(routerpool[<span class=\"string\">\"/404\"</span>])&#123;</span><br><span class=\"line\">                    routerpool[<span class=\"string\">\"/404\"</span>][<span class=\"string\">\"method\"</span>][<span class=\"string\">\"get\"</span>](req, res);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    res.writeHead(<span class=\"number\">404</span>, <span class=\"string\">\"Not found\"</span>);</span><br><span class=\"line\">                    res.end();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>目前use方法只能添加一层，且暂时没有添加通配符功能，通配符功能感觉有一些复杂，但是添加的话也应该是在router中进行添加路由匹配的另一种规则。</p>\n<p>以上就是我对于web server的一些尝试，欢迎感兴趣的同学一起来讨论。感谢阅读</p>\n<p>cheers！</p>\n","site":{"data":{}},"excerpt":"<p>在写上一篇博客的过程中，一边思考一边进行整体框架的构思，感觉思路很清晰，于是这几天过年的事情忙完了之后在今天下午进行了webserver的改进。</p>\n<p>比如对routepool数据结构的改进，对流程的进一步完善。</p>","more":"<h3 id=\"路由流程的完善\"><a href=\"#路由流程的完善\" class=\"headerlink\" title=\"路由流程的完善\"></a>路由流程的完善</h3><p>目前这个hexo的博客还是部署在github上，但是github的空间只有300m，如果以后一直写的话总会有一天空间不够，所以肯定是需要将博客部署到自己的服务器上面。这样的话就需要了解一下hexo的访问方式。</p>\n<p>hexo的博客编写起来结构有一些复杂，需要解析markdown进行html的生成。但是这部分我暂时还没有研究到，只是看了一下文件结构，感觉博客的主体思想就是使用模板，将markdown中的内容解析到模板当中，至于具体是如何生成暂时还没有了解。但是整体的思想了解了之后就知道如何将hexo生成的文件放在自己的服务器上能够被用户访问到。</p>\n<p>简单来说，想要实现上述效果只是需要在路由时进行静态资源的判断。也就是访问到路径所指向的文件夹时进行一次index.html是否存在的判断。</p>\n<p>由于在流程中多次需要用到文件存在的判断以及静态资源的读取，返回。所以将这两个环节抽象为两个函数。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fileExist = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">pathname, existfn, unexistfn</span>)</span>&#123;</span><br><span class=\"line\">    fs.exists(pathname, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">exist</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(exist)&#123;</span><br><span class=\"line\">            existfn();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            unexistfn();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> staticFile = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res,pathname,ext</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> raw = fs.createReadStream(pathname);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> acceptEncoding = req.headers[<span class=\"string\">'accept-encoding'</span>] || <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> matched = ext.match(headers.fileMatch);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> expires = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    expires.setTime(expires.getTime() + headers.maxAge * <span class=\"number\">1000</span>);</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">\"Expires\"</span>, expires.toUTCString());</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">\"Cache-Control\"</span>, <span class=\"string\">\"max-age=\"</span> + headers.maxAge);</span><br><span class=\"line\">    <span class=\"comment\">//判断304</span></span><br><span class=\"line\">    fs.stat(pathname, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, stat</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            lastModified = stat.mtime.toUTCString();</span><br><span class=\"line\">            res.setHeader(<span class=\"string\">\"Last-Modified\"</span>, lastModified);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (req.headers[<span class=\"string\">'if-modified-since'</span>] &amp;&amp; lastModified == req.headers[<span class=\"string\">'if-modified-since'</span>]) &#123;</span><br><span class=\"line\">                res.writeHead(<span class=\"number\">304</span>, <span class=\"string\">\"Not Modified\"</span>);</span><br><span class=\"line\">                res.end();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//如果不是304</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (matched &amp;&amp; acceptEncoding.match(<span class=\"regexp\">/\\bgzip\\b/</span>)) &#123;</span><br><span class=\"line\">                    res.writeHead(<span class=\"number\">200</span>, <span class=\"string\">\"Ok\"</span>, &#123;</span><br><span class=\"line\">                        <span class=\"string\">'Content-Encoding'</span>: <span class=\"string\">'gzip'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'content-Type'</span>:header[matched[<span class=\"number\">0</span>]]</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                    raw.pipe(zlib.createGzip()).pipe(res);</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (matched &amp;&amp; acceptEncoding.match(<span class=\"regexp\">/\\bdeflate\\b/</span>)) &#123;</span><br><span class=\"line\">                    res.writeHead(<span class=\"number\">200</span>, <span class=\"string\">\"Ok\"</span>, &#123;</span><br><span class=\"line\">                        <span class=\"string\">'Content-Encoding'</span>: <span class=\"string\">'deflate'</span>,</span><br><span class=\"line\">                        <span class=\"string\">'content-Type'</span>:header[matched[<span class=\"number\">0</span>]]</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                    raw.pipe(zlib.createDeflate()).pipe(res);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    res.writeHead(<span class=\"number\">200</span>, <span class=\"string\">\"Ok\"</span>,&#123;</span><br><span class=\"line\">                        <span class=\"string\">'content-Type'</span>:header[matched[<span class=\"number\">0</span>]]</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                    raw.pipe(res);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"路由流程的控制\"><a href=\"#路由流程的控制\" class=\"headerlink\" title=\"路由流程的控制\"></a>路由流程的控制</h3><p>编写完静态资源以及判断文件是否存在方法之后就要进行流程的控制了，代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> pathname = url.parse(req.url);</span><br><span class=\"line\"><span class=\"keyword\">let</span> pathN = pathname.pathname;</span><br><span class=\"line\"><span class=\"keyword\">let</span> ext = path.extname(pathN);</span><br><span class=\"line\"><span class=\"keyword\">let</span> headers = &#123;</span><br><span class=\"line\">    fileMatch: <span class=\"regexp\">/^(gif|png|jpg|js|css|html)$/ig</span>,</span><br><span class=\"line\">    maxAge: <span class=\"number\">60</span> * <span class=\"number\">60</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">ext = ext ? ext.slice(<span class=\"number\">1</span>) : <span class=\"string\">'unknown:'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (ext.match(headers.fileMatch)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.staticFile(req,res,pathN,ext);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    res.send = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj,str</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(str === <span class=\"string\">'json'</span>)&#123;</span><br><span class=\"line\">            res.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">'content-Type'</span>:<span class=\"string\">'application/json'</span>&#125;);</span><br><span class=\"line\">            res.end(<span class=\"built_in\">JSON</span>.stringify(obj));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(req.method === <span class=\"string\">'GET'</span>)&#123;</span><br><span class=\"line\">        req.query = querystring.parse(pathN.query);</span><br><span class=\"line\">        that.router(req.method.toLowerCase(),pathN,req,res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(req.method === <span class=\"string\">'POST'</span>)&#123;</span><br><span class=\"line\">        req.setEncoding(<span class=\"string\">'utf-8'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> postData = <span class=\"string\">\"\"</span>,params;</span><br><span class=\"line\">        req.addListener(<span class=\"string\">\"data\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">postDataChunk</span>) </span>&#123;</span><br><span class=\"line\">            postData += postDataChunk;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        req.addListener(<span class=\"string\">\"end\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            params = querystring.parse(postData);</span><br><span class=\"line\">            req.query = params;</span><br><span class=\"line\">            that.router(req.method.toLowerCase(),pathN,req,res);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这部分代码用于路由流程的控制，以及将get，post请求所发送的数据分别解析出来，get请求大部分情况下是在url中添加数据，而post请求则需要进行监听，因为是分段发送，至于为什么post请求是分段发送，我在百度中没有找到靠谱的答案，面试中也有被问到过，答得也不是特别满意，如果有知道的同学可以在下面留言，感谢。</p>\n<h3 id=\"routepool数据结构的设定\"><a href=\"#routepool数据结构的设定\" class=\"headerlink\" title=\"routepool数据结构的设定\"></a>routepool数据结构的设定</h3><p>routepool是路由的根本，所以，将routepool设为私有属性，app的get,post,use方法的作用相当于routepool的setter，而app.route则相当于routepool的getter。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fileExist = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">pathname, existfn, unexistfn</span>)</span>&#123;</span><br><span class=\"line\">    fs.exists(pathname, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">exist</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(exist)&#123;</span><br><span class=\"line\">            existfn();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            unexistfn();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> routerpool = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> pool = routerpool;</span><br><span class=\"line\">app = &#123;</span><br><span class=\"line\">\tpost: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str, callback</span>) </span>&#123;</span><br><span class=\"line\">        routerInit(str, pool);</span><br><span class=\"line\">        pool[str][<span class=\"string\">\"method\"</span>][<span class=\"string\">\"post\"</span>] = callback;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str, callback</span>) </span>&#123;</span><br><span class=\"line\">        routerInit(str, pool);</span><br><span class=\"line\">        pool[str][<span class=\"string\">\"method\"</span>][<span class=\"string\">\"get\"</span>] = callback;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    use: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str, callback</span>) </span>&#123;</span><br><span class=\"line\">        routerpool[str] = &#123;&#125;;</span><br><span class=\"line\">        routerpool[str][<span class=\"string\">\"children\"</span>] = &#123;&#125;;</span><br><span class=\"line\">        pool = routerpool[str][<span class=\"string\">\"children\"</span>];</span><br><span class=\"line\">        callback();</span><br><span class=\"line\">        pool = routerpool;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    router: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">method, str, req, res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> callback;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((callback = routerExist(str,method))) &#123;</span><br><span class=\"line\">            callback(req,res);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            fileExist(<span class=\"string\">\"public/view\"</span>+str+<span class=\"string\">\"/index.html\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                staticFile(req,res,<span class=\"string\">\"public/view\"</span>+str+<span class=\"string\">\"/index.html\"</span>,<span class=\"string\">\"html\"</span>);</span><br><span class=\"line\">            &#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(routerpool[<span class=\"string\">\"/404\"</span>])&#123;</span><br><span class=\"line\">                    routerpool[<span class=\"string\">\"/404\"</span>][<span class=\"string\">\"method\"</span>][<span class=\"string\">\"get\"</span>](req, res);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    res.writeHead(<span class=\"number\">404</span>, <span class=\"string\">\"Not found\"</span>);</span><br><span class=\"line\">                    res.end();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>目前use方法只能添加一层，且暂时没有添加通配符功能，通配符功能感觉有一些复杂，但是添加的话也应该是在router中进行添加路由匹配的另一种规则。</p>\n<p>以上就是我对于web server的一些尝试，欢迎感兴趣的同学一起来讨论。感谢阅读</p>\n<p>cheers！</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjks39xbp0000p648pg0b4xe3","category_id":"cjks39xc20003p648nxmqvb00","_id":"cjks39xcf000cp648o4d5cavg"},{"post_id":"cjks39xcc000bp648qki8vjvv","category_id":"cjks39xca0008p6482vcxl8mh","_id":"cjks39xci000gp648w1m5jc90"},{"post_id":"cjks39xbx0002p64877rz6xvt","category_id":"cjks39xca0008p6482vcxl8mh","_id":"cjks39xcj000jp648ncawo6fr"},{"post_id":"cjks39xc50005p648ihaih5q1","category_id":"cjks39xca0008p6482vcxl8mh","_id":"cjks39xck000mp648r8qctund"},{"post_id":"cjks39xc70006p648g1s45uvo","category_id":"cjks39xca0008p6482vcxl8mh","_id":"cjks39xcm000qp648gr1jvmfk"},{"post_id":"cjks39xc90007p648733zavkt","category_id":"cjks39xca0008p6482vcxl8mh","_id":"cjks39xcn000tp648uw331bmz"}],"PostTag":[{"post_id":"cjks39xbp0000p648pg0b4xe3","tag_id":"cjks39xc40004p648d8z4t3u0","_id":"cjks39xcb000ap6481x4o8d07"},{"post_id":"cjks39xcc000bp648qki8vjvv","tag_id":"cjks39xca0009p648axobijsy","_id":"cjks39xch000fp648kj3zdpyc"},{"post_id":"cjks39xbx0002p64877rz6xvt","tag_id":"cjks39xca0009p648axobijsy","_id":"cjks39xcj000kp64845csn7lu"},{"post_id":"cjks39xbx0002p64877rz6xvt","tag_id":"cjks39xcf000ep6489o52m0vn","_id":"cjks39xck000np648nscdkd8l"},{"post_id":"cjks39xc50005p648ihaih5q1","tag_id":"cjks39xcj000ip648qc7ra6xw","_id":"cjks39xcl000pp648uum9u5bi"},{"post_id":"cjks39xc70006p648g1s45uvo","tag_id":"cjks39xca0009p648axobijsy","_id":"cjks39xcn000sp648ad7qdc77"},{"post_id":"cjks39xc90007p648733zavkt","tag_id":"cjks39xcm000rp648bqwyspxw","_id":"cjks39xco000vp648kylvmzbk"},{"post_id":"cjks39xc90007p648733zavkt","tag_id":"cjks39xcn000up648mlb3usvn","_id":"cjks39xcp000wp6482xdmty2s"}],"Tag":[{"name":"心情","_id":"cjks39xc40004p648d8z4t3u0"},{"name":"nodejs","_id":"cjks39xca0009p648axobijsy"},{"name":"hexo","_id":"cjks39xcf000ep6489o52m0vn"},{"name":"数据挖掘","_id":"cjks39xcj000ip648qc7ra6xw"},{"name":"Python","_id":"cjks39xcm000rp648bqwyspxw"},{"name":"tkinter","_id":"cjks39xcn000up648mlb3usvn"}]}}